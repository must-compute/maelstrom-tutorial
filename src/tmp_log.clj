2025-01-17 13:22:11,886{GMT}	INFO	[jepsen test runner] jepsen.core: Test version f58fe7147c42f76ca7cb9e0786fb788e10548442 (plus uncommitted changes)
2025-01-17 13:22:11,887{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin ./target/debug/maelstrom-tutorial --time-limit 20 --log-stderr
2025-01-17 13:22:12,036{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x17734113"
         "maelstrom.db$db$reify__16142@17734113"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x7d3a9061" "2025-01-17T13:22:11.859Z"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x2a2f7a61"
         "maelstrom.net$jepsen_net$reify__15251@2a2f7a61"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x8d40f07"
         "maelstrom.workload.broadcast$client$reify__16644@8d40f07"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x196c8b93"
         "java.util.concurrent.CyclicBarrier@196c8b93"]
 :log-stderr true
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x307ca947"
         "jepsen.checker$compose$reify__11881@307ca947"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "./target/debug/maelstrom-tutorial"
  "--time-limit"
  "20"
  "--log-stderr")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@61d1315b"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@49d5b651"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./target/debug/maelstrom-tutorial"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x4a03c4bc"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@4a03c4bc"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x3d0c88f4"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@3d0c88f4"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 400000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 1,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x50a1c2f3"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@50a1c2f3"],
           :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x453ca7f"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@453ca7f"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x5d41b929"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x6dd0e2f4"
         "maelstrom.net$jepsen_os$reify__15254@6dd0e2f4"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-01-17 13:22:14,186{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2025-01-17 13:22:14,189{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-01-17 13:22:14,192{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-01-17 13:22:14,197{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-01-17 13:22:14,198{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2025-01-17 13:22:14,200{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ./target/debug/maelstrom-tutorial []
2025-01-17 13:22:14,203{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2025-01-17 13:22:14,204{GMT}	INFO	[jepsen node n3] maelstrom.process: launching ./target/debug/maelstrom-tutorial []
2025-01-17 13:22:14,205{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2025-01-17 13:22:14,206{GMT}	INFO	[jepsen node n4] maelstrom.process: launching ./target/debug/maelstrom-tutorial []
2025-01-17 13:22:14,208{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2025-01-17 13:22:14,210{GMT}	INFO	[jepsen node n5] maelstrom.process: launching ./target/debug/maelstrom-tutorial []
2025-01-17 13:22:14,214{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2025-01-17 13:22:14,215{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ./target/debug/maelstrom-tutorial []
2025-01-17 13:22:14,262{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2025-01-17 13:22:14,267{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa My neighbors are ["n4", "n2"]
2025-01-17 13:22:14,271{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa My neighbors are ["n5", "n3", "n1"]
2025-01-17 13:22:14,276{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa My neighbors are ["n2"]
2025-01-17 13:22:14,280{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa My neighbors are ["n1", "n5"]
2025-01-17 13:22:14,285{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa My neighbors are ["n2", "n4"]
2025-01-17 13:22:14,300{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:14,304{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[]
2025-01-17 13:22:14,547{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	0
2025-01-17 13:22:14,549{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, logged:	 Received broadcast msg Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }
2025-01-17 13:22:14,549{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, logged:	 Current messages: {}
2025-01-17 13:22:14,549{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, logged:	 Update messages: {Number(0)}
2025-01-17 13:22:14,550{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,550{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,550{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,550{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, logged:	 Initial unacked: ["n5", "n3", "n1"]
2025-01-17 13:22:14,551{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, logged:	 Unacked: empty? false, ["n5", "n3", "n1"]
2025-01-17 13:22:14,551{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:14,552{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:14,552{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, logged:	 Received broadcast msg Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }
2025-01-17 13:22:14,553{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, logged:	 Current messages: {}
2025-01-17 13:22:14,553{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, logged:	 Update messages: {Number(0)}
2025-01-17 13:22:14,553{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,554{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }
2025-01-17 13:22:14,555{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Current messages: {}
2025-01-17 13:22:14,555{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Update messages: {Number(0)}
2025-01-17 13:22:14,555{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,555{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Initial unacked: ["n5"]
2025-01-17 13:22:14,556{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:14,556{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:14,554{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:14,555{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, logged:	 Initial unacked: ["n4"]
2025-01-17 13:22:14,557{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, logged:	 Unacked: empty? false, ["n4"]
2025-01-17 13:22:14,557{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:14,558{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }
2025-01-17 13:22:14,559{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Current messages: {}
2025-01-17 13:22:14,559{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Update messages: {Number(0)}
2025-01-17 13:22:14,559{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,560{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:14,560{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:14,561{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:14,563{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Received broadcast msg Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(0) } }
2025-01-17 13:22:14,564{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Current messages: {}
2025-01-17 13:22:14,564{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Update messages: {Number(0)}
2025-01-17 13:22:14,564{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Initial unacked: []
2025-01-17 13:22:14,565{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:14,565{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:14,565{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:14,566{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Received broadcast msg Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }
2025-01-17 13:22:14,566{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Current messages: {Number(0)}
2025-01-17 13:22:14,567{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:14,568{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:14,569{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: BroadcastOk { msg_id: Some(2), in_reply_to: 3 } }, logged:	 Executing callback for 3
2025-01-17 13:22:14,569{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } } and it received response Message { src: "n3", dest: "n2", body: BroadcastOk { msg_id: Some(2), in_reply_to: 3 } }
2025-01-17 13:22:14,569{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, and it is removing n3 from current unacked ["n5", "n3", "n1"]
2025-01-17 13:22:14,570{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, and here is Unacked after removing n3: ["n5", "n1"]
2025-01-17 13:22:14,570{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(0) } }
2025-01-17 13:22:14,571{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Current messages: {Number(0)}
2025-01-17 13:22:14,571{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:14,572{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:14,572{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: BroadcastOk { msg_id: Some(3), in_reply_to: 2 } }, logged:	 Executing callback for 2
2025-01-17 13:22:14,572{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } } and it received response Message { src: "n5", dest: "n2", body: BroadcastOk { msg_id: Some(3), in_reply_to: 2 } }
2025-01-17 13:22:14,572{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, and it is removing n5 from current unacked ["n5", "n1"]
2025-01-17 13:22:14,573{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, and here is Unacked after removing n5: ["n1"]
2025-01-17 13:22:14,573{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:14,574{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(5), in_reply_to: 2 } }, logged:	 Executing callback for 2
2025-01-17 13:22:14,576{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(5), in_reply_to: 2 } }
2025-01-17 13:22:14,577{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:14,577{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:14,666{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	1
2025-01-17 13:22:14,667{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, logged:	 Received broadcast msg Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }
2025-01-17 13:22:14,668{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, logged:	 Current messages: {Number(0)}
2025-01-17 13:22:14,668{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, logged:	 Update messages: {Number(0), Number(1)}
2025-01-17 13:22:14,669{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,669{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:14,669{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(3), message: Number(1) } }
2025-01-17 13:22:14,671{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 Current messages: {Number(0)}
2025-01-17 13:22:14,671{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 Update messages: {Number(0), Number(1)}
2025-01-17 13:22:14,671{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, logged:	 Received broadcast msg Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }
2025-01-17 13:22:14,671{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,672{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,672{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 Initial unacked: ["n5", "n1"]
2025-01-17 13:22:14,673{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:14,673{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 Unacked: empty? false, ["n5", "n1"]
2025-01-17 13:22:14,673{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:14,673{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:14,673{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, logged:	 Current messages: {Number(0)}
2025-01-17 13:22:14,673{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:14,674{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, logged:	 Update messages: {Number(0), Number(1)}
2025-01-17 13:22:14,674{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,675{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, logged:	 Initial unacked: ["n4"]
2025-01-17 13:22:14,675{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, logged:	 Unacked: empty? false, ["n4"]
2025-01-17 13:22:14,675{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:14,677{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }
2025-01-17 13:22:14,677{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 Current messages: {Number(0)}
2025-01-17 13:22:14,677{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 Update messages: {Number(1), Number(0)}
2025-01-17 13:22:14,678{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }, logged:	 Received broadcast msg Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }
2025-01-17 13:22:14,679{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,679{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 Initial unacked: ["n1"]
2025-01-17 13:22:14,680{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:14,680{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }, logged:	 Current messages: {Number(0)}
2025-01-17 13:22:14,681{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:14,682{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }, logged:	 Update messages: {Number(0), Number(1)}
2025-01-17 13:22:14,682{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:14,683{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }, logged:	 Initial unacked: ["n4"]
2025-01-17 13:22:14,683{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }, logged:	 Unacked: empty? false, ["n4"]
2025-01-17 13:22:14,683{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:14,684{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(1) } }
2025-01-17 13:22:14,686{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 Current messages: {Number(0), Number(1)}
2025-01-17 13:22:14,686{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:14,686{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }
2025-01-17 13:22:14,689{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 Current messages: {Number(1), Number(0)}
2025-01-17 13:22:14,690{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:14,690{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:14,690{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(5), in_reply_to: 3 } }, logged:	 Executing callback for 3
2025-01-17 13:22:14,691{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(5), in_reply_to: 3 } }
2025-01-17 13:22:14,691{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:14,692{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:14,693{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:14,695{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(4), in_reply_to: 4 } }, logged:	 Executing callback for 4
2025-01-17 13:22:14,696{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(4), in_reply_to: 4 } }
2025-01-17 13:22:14,696{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:14,696{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:15,047{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-01-17 13:22:15,050{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[1 0]
2025-01-17 13:22:15,279{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	2
2025-01-17 13:22:15,284{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, logged:	 Received broadcast msg Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }
2025-01-17 13:22:15,284{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, logged:	 Current messages: {Number(0), Number(1)}
2025-01-17 13:22:15,285{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, logged:	 Update messages: {Number(0), Number(2), Number(1)}
2025-01-17 13:22:15,285{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,286{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,286{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, logged:	 Initial unacked: ["n2", "n4"]
2025-01-17 13:22:15,286{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:15,287{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:15,289{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:15,300{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }
2025-01-17 13:22:15,301{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }
2025-01-17 13:22:15,302{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }, logged:	 Current messages: {Number(0), Number(1)}
2025-01-17 13:22:15,302{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }, logged:	 Update messages: {Number(0), Number(1), Number(2)}
2025-01-17 13:22:15,302{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,302{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,302{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }, logged:	 Initial unacked: ["n3", "n1"]
2025-01-17 13:22:15,302{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }, logged:	 Unacked: empty? false, ["n3", "n1"]
2025-01-17 13:22:15,303{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:15,303{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:15,313{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(2) } }, logged:	 Received broadcast msg Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(2) } }
2025-01-17 13:22:15,313{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(2) } }, logged:	 Current messages: {Number(0), Number(1)}
2025-01-17 13:22:15,314{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(2) } }, logged:	 Update messages: {Number(2), Number(0), Number(1)}
2025-01-17 13:22:15,314{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(2) } }, logged:	 Initial unacked: []
2025-01-17 13:22:15,314{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(2) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:15,314{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:15,314{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(2) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,315{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,315{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: BroadcastOk { msg_id: Some(4), in_reply_to: 8 } }, logged:	 Executing callback for 8
2025-01-17 13:22:15,316{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } } and it received response Message { src: "n3", dest: "n2", body: BroadcastOk { msg_id: Some(4), in_reply_to: 8 } }
2025-01-17 13:22:15,316{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }, and it is removing n3 from current unacked ["n3", "n1"]
2025-01-17 13:22:15,316{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }, and here is Unacked after removing n3: ["n1"]
2025-01-17 13:22:15,332{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Current messages: {Number(1), Number(0)}
2025-01-17 13:22:15,333{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Update messages: {Number(1), Number(2), Number(0)}
2025-01-17 13:22:15,334{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,334{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Initial unacked: ["n1"]
2025-01-17 13:22:15,335{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:15,335{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:15,337{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }, logged:	 Received broadcast msg Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }
2025-01-17 13:22:15,338{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }, logged:	 Current messages: {Number(0), Number(1)}
2025-01-17 13:22:15,339{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }, logged:	 Update messages: {Number(2), Number(0), Number(1)}
2025-01-17 13:22:15,340{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,340{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }, logged:	 Initial unacked: ["n4"]
2025-01-17 13:22:15,340{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }, logged:	 Unacked: empty? false, ["n4"]
2025-01-17 13:22:15,341{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:15,341{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(6), message: Number(2) } }
2025-01-17 13:22:15,341{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Current messages: {Number(2), Number(0), Number(1)}
2025-01-17 13:22:15,341{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }
2025-01-17 13:22:15,342{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,344{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Current messages: {Number(1), Number(2), Number(0)}
2025-01-17 13:22:15,344{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,346{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,347{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,347{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(7), in_reply_to: 6 } }, logged:	 Executing callback for 6
2025-01-17 13:22:15,347{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(6), in_reply_to: 6 } }, logged:	 Executing callback for 6
2025-01-17 13:22:15,348{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(7), in_reply_to: 6 } }
2025-01-17 13:22:15,348{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(6), in_reply_to: 6 } }
2025-01-17 13:22:15,349{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:15,349{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:15,350{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:15,350{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:15,460{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	3
2025-01-17 13:22:15,461{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, logged:	 Received broadcast msg Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }
2025-01-17 13:22:15,461{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, logged:	 Current messages: {Number(2), Number(0), Number(1)}
2025-01-17 13:22:15,461{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, logged:	 Update messages: {Number(3), Number(2), Number(0), Number(1)}
2025-01-17 13:22:15,461{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,461{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,462{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, logged:	 Initial unacked: ["n4", "n2"]
2025-01-17 13:22:15,462{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:15,462{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:15,463{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:15,463{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }
2025-01-17 13:22:15,464{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Current messages: {Number(1), Number(2), Number(0)}
2025-01-17 13:22:15,464{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Update messages: {Number(2), Number(3), Number(1), Number(0)}
2025-01-17 13:22:15,464{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,464{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Initial unacked: ["n5"]
2025-01-17 13:22:15,464{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:15,464{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:15,465{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }
2025-01-17 13:22:15,465{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Current messages: {Number(0), Number(2), Number(1)}
2025-01-17 13:22:15,466{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Update messages: {Number(0), Number(2), Number(1), Number(3)}
2025-01-17 13:22:15,466{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,466{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:15,466{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:15,467{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:15,474{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(9), message: Number(3) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(9), message: Number(3) } }
2025-01-17 13:22:15,475{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(9), message: Number(3) } }, logged:	 Current messages: {Number(0), Number(1), Number(2)}
2025-01-17 13:22:15,476{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(9), message: Number(3) } }, logged:	 Update messages: {Number(1), Number(3), Number(0), Number(2)}
2025-01-17 13:22:15,476{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(9), message: Number(3) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,476{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(9), message: Number(3) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,477{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(9), message: Number(3) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:15,477{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(9), message: Number(3) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:15,478{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:15,478{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(3) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(3) } }
2025-01-17 13:22:15,479{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(10), message: Number(3) } }, logged:	 Received broadcast msg Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(10), message: Number(3) } }
2025-01-17 13:22:15,480{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(10), message: Number(3) } }, logged:	 Current messages: {Number(0), Number(2), Number(1), Number(3)}
2025-01-17 13:22:15,481{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(10), message: Number(3) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,482{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(3) } }, logged:	 Current messages: {Number(1), Number(3), Number(0), Number(2)}
2025-01-17 13:22:15,482{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(3) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,484{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,484{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,484{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(11), in_reply_to: 7 } }, logged:	 Executing callback for 7
2025-01-17 13:22:15,485{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:15,485{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: BroadcastOk { msg_id: Some(8), in_reply_to: 10 } }, logged:	 Executing callback for 10
2025-01-17 13:22:15,486{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(9), message: Number(3) } } and it received response Message { src: "n5", dest: "n2", body: BroadcastOk { msg_id: Some(8), in_reply_to: 10 } }
2025-01-17 13:22:15,487{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(11), in_reply_to: 7 } }
2025-01-17 13:22:15,487{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:15,488{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:15,549{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c11", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(0) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:15,549{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:15,554{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, logged:	 Unacked: empty? false, ["n4"]
2025-01-17 13:22:15,554{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:15,554{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:15,555{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:15,558{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:15,559{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(0) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(0) } }
2025-01-17 13:22:15,559{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:15,559{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(0) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,562{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(0) } }, logged:	 Current messages: {Number(2), Number(3), Number(1), Number(0)}
2025-01-17 13:22:15,562{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(0) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(0) } }
2025-01-17 13:22:15,562{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(0) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,562{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(0) } }, logged:	 Current messages: {Number(0), Number(2), Number(1), Number(3)}
2025-01-17 13:22:15,563{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(0) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,564{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,564{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(9), in_reply_to: 2 } }, logged:	 Executing callback for 2
2025-01-17 13:22:15,564{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(9), in_reply_to: 2 } }
2025-01-17 13:22:15,565{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:15,565{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:15,566{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,566{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,566{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(10), in_reply_to: 9 } }, logged:	 Executing callback for 9
2025-01-17 13:22:15,567{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(10), in_reply_to: 9 } }
2025-01-17 13:22:15,567{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(10), in_reply_to: 10 } }, logged:	 Executing callback for 10
2025-01-17 13:22:15,569{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(10), in_reply_to: 10 } }
2025-01-17 13:22:15,569{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:15,570{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:15,570{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:15,570{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:15,574{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-01-17 13:22:15,576{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[2 3 1 0]
2025-01-17 13:22:15,668{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:15,668{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:15,669{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(1) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(1) } }
2025-01-17 13:22:15,670{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(1) } }, logged:	 Current messages: {Number(1), Number(3), Number(0), Number(2)}
2025-01-17 13:22:15,670{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(1) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,671{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,671{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(3), message: Number(1) } }, logged:	 Unacked: empty? false, ["n5", "n1"]
2025-01-17 13:22:15,672{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:15,672{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(12), in_reply_to: 5 } }, logged:	 Executing callback for 5
2025-01-17 13:22:15,672{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } } and it received response Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(12), in_reply_to: 5 } }
2025-01-17 13:22:15,672{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:15,673{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:15,678{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, logged:	 Unacked: empty? false, ["n4"]
2025-01-17 13:22:15,678{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:15,679{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(11), message: Number(1) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(11), message: Number(1) } }
2025-01-17 13:22:15,680{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(11), message: Number(1) } }, logged:	 Current messages: {Number(2), Number(3), Number(1), Number(0)}
2025-01-17 13:22:15,680{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(11), message: Number(1) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,682{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:15,682{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:15,682{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:15,682{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(4), message: Number(1) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,682{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:15,682{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(7), message: Number(1) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,687{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,688{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(12), in_reply_to: 11 } }, logged:	 Executing callback for 11
2025-01-17 13:22:15,688{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(12), in_reply_to: 11 } }
2025-01-17 13:22:15,689{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:15,689{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:15,691{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,691{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(12), in_reply_to: 4 } }, logged:	 Executing callback for 4
2025-01-17 13:22:15,692{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(12), in_reply_to: 4 } }
2025-01-17 13:22:15,692{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:15,693{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:15,920{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	4
2025-01-17 13:22:15,921{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, logged:	 Received broadcast msg Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }
2025-01-17 13:22:15,921{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, logged:	 Current messages: {Number(2), Number(3), Number(1), Number(0)}
2025-01-17 13:22:15,921{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, logged:	 Update messages: {Number(2), Number(3), Number(1), Number(0), Number(4)}
2025-01-17 13:22:15,921{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,922{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,923{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }
2025-01-17 13:22:15,923{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }
2025-01-17 13:22:15,923{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, logged:	 Initial unacked: ["n1", "n5"]
2025-01-17 13:22:15,924{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:15,925{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:15,924{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }, logged:	 Current messages: {Number(1), Number(3), Number(0), Number(2)}
2025-01-17 13:22:15,925{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }, logged:	 Update messages: {Number(1), Number(3), Number(0), Number(2), Number(4)}
2025-01-17 13:22:15,926{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,926{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,927{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:15,927{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:15,927{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:15,924{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, logged:	 Current messages: {Number(3), Number(2), Number(0), Number(1)}
2025-01-17 13:22:15,928{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, logged:	 Update messages: {Number(4), Number(3), Number(2), Number(0), Number(1)}
2025-01-17 13:22:15,928{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,928{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:15,928{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:15,928{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:15,930{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:15,935{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }
2025-01-17 13:22:15,936{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }, logged:	 Current messages: {Number(0), Number(2), Number(1), Number(3)}
2025-01-17 13:22:15,936{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }, logged:	 Update messages: {Number(0), Number(2), Number(1), Number(3), Number(4)}
2025-01-17 13:22:15,937{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:15,938{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:15,939{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:15,939{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:15,942{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }
2025-01-17 13:22:15,943{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }, logged:	 Current messages: {Number(1), Number(3), Number(0), Number(2), Number(4)}
2025-01-17 13:22:15,943{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(12), message: Number(4) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:15,946{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:15,947{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(13), in_reply_to: 12 } }, logged:	 Executing callback for 12
2025-01-17 13:22:15,947{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(13), in_reply_to: 12 } }
2025-01-17 13:22:15,947{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:15,948{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:16,287{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:16,288{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:16,288{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:16,289{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(2) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(2) } }
2025-01-17 13:22:16,289{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(2) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(2) } }
2025-01-17 13:22:16,290{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(2) } }, logged:	 Current messages: {Number(2), Number(3), Number(1), Number(0), Number(4)}
2025-01-17 13:22:16,290{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(2) } }, logged:	 Current messages: {Number(1), Number(3), Number(0), Number(2), Number(4)}
2025-01-17 13:22:16,291{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(2) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,291{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(2) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,292{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,293{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(16), in_reply_to: 14 } }, logged:	 Executing callback for 14
2025-01-17 13:22:16,293{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(16), in_reply_to: 14 } }
2025-01-17 13:22:16,293{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, and it is removing n4 from current unacked ["n2", "n4"]
2025-01-17 13:22:16,293{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, and here is Unacked after removing n4: ["n2"]
2025-01-17 13:22:16,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(14), in_reply_to: 13 } }, logged:	 Executing callback for 13
2025-01-17 13:22:16,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(14), in_reply_to: 13 } }
2025-01-17 13:22:16,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:16,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:16,302{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(5), message: Number(2) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:16,303{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:16,336{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:16,337{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:16,337{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(2) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,340{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,341{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:16,341{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:16,341{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(9), message: Number(2) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,341{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(17), in_reply_to: 6 } }, logged:	 Executing callback for 6
2025-01-17 13:22:16,342{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(17), in_reply_to: 6 } }
2025-01-17 13:22:16,344{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:16,344{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:16,464{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:16,464{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:16,464{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:16,466{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:16,466{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:16,467{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(15), message: Number(3) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(15), message: Number(3) } }
2025-01-17 13:22:16,468{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(15), message: Number(3) } }, logged:	 Current messages: {Number(1), Number(3), Number(0), Number(2), Number(4)}
2025-01-17 13:22:16,468{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(15), message: Number(3) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,468{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:16,469{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:16,469{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,471{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(3) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(3) } }
2025-01-17 13:22:16,472{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(3) } }, logged:	 Current messages: {Number(2), Number(3), Number(1), Number(0), Number(4)}
2025-01-17 13:22:16,473{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(3) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,473{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,475{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(15), in_reply_to: 8 } }, logged:	 Executing callback for 8
2025-01-17 13:22:16,475{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(15), in_reply_to: 8 } }
2025-01-17 13:22:16,475{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:16,475{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:16,476{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,477{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(15), in_reply_to: 15 } }, logged:	 Executing callback for 15
2025-01-17 13:22:16,477{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(15), in_reply_to: 15 } }
2025-01-17 13:22:16,477{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, and it is removing n2 from current unacked ["n4", "n2"]
2025-01-17 13:22:16,478{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, and here is Unacked after removing n2: ["n4"]
2025-01-17 13:22:16,478{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,479{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(19), in_reply_to: 14 } }, logged:	 Executing callback for 14
2025-01-17 13:22:16,479{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(19), in_reply_to: 14 } }
2025-01-17 13:22:16,479{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:16,480{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:16,481{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(18), message: Number(3) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(18), message: Number(3) } }
2025-01-17 13:22:16,481{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(18), message: Number(3) } }, logged:	 Current messages: {Number(0), Number(2), Number(1), Number(3), Number(4)}
2025-01-17 13:22:16,482{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(18), message: Number(3) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,484{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,489{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(16), in_reply_to: 18 } }, logged:	 Executing callback for 18
2025-01-17 13:22:16,489{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(16), in_reply_to: 18 } }
2025-01-17 13:22:16,490{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:16,490{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:16,554{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:16,554{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:16,555{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:16,555{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(0) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,555{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:16,555{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,555{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,556{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(20), in_reply_to: 3 } }, logged:	 Executing callback for 3
2025-01-17 13:22:16,556{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(20), in_reply_to: 3 } }
2025-01-17 13:22:16,556{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:16,556{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n2", dest: "n1", body: Broadcast { msg_id: Some(4), message: Number(0) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:16,668{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:16,669{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:16,669{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	1
2025-01-17 13:22:16,669{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(1), message: Number(1) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,670{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	5
2025-01-17 13:22:16,670{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, logged:	 Received broadcast msg Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }
2025-01-17 13:22:16,670{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, logged:	 Current messages: {Number(2), Number(0), Number(1)}
2025-01-17 13:22:16,671{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, logged:	 Update messages: {Number(5), Number(2), Number(0), Number(1)}
2025-01-17 13:22:16,671{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(5) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(5) } }
2025-01-17 13:22:16,671{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:16,671{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(5) } }, logged:	 Current messages: {Number(1), Number(3), Number(0), Number(2), Number(4)}
2025-01-17 13:22:16,672{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(5) } }, logged:	 Update messages: {Number(1), Number(3), Number(0), Number(2), Number(5), Number(4)}
2025-01-17 13:22:16,672{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(5) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:16,672{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(5) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:16,672{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(5) } }, logged:	 Initial unacked: ["n5", "n1"]
2025-01-17 13:22:16,673{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(7), message: Number(5) } }, logged:	 Unacked: empty? false, ["n5", "n1"]
2025-01-17 13:22:16,673{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:16,674{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:16,674{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:16,674{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:16,678{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:16,678{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:16,679{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: Broadcast { msg_id: Some(6), message: Number(1) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,923{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:16,923{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:16,924{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(17), message: Number(4) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(17), message: Number(4) } }
2025-01-17 13:22:16,925{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(17), message: Number(4) } }, logged:	 Current messages: {Number(1), Number(3), Number(0), Number(2), Number(5), Number(4)}
2025-01-17 13:22:16,925{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(17), message: Number(4) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,926{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,926{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(16), in_reply_to: 17 } }, logged:	 Executing callback for 17
2025-01-17 13:22:16,926{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(16), in_reply_to: 17 } }
2025-01-17 13:22:16,926{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:16,926{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:16,931{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:16,931{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:16,931{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:16,933{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(21), message: Number(4) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(21), message: Number(4) } }
2025-01-17 13:22:16,933{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(21), message: Number(4) } }, logged:	 Current messages: {Number(4), Number(3), Number(2), Number(0), Number(1)}
2025-01-17 13:22:16,933{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(22), message: Number(4) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(22), message: Number(4) } }
2025-01-17 13:22:16,934{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(22), message: Number(4) } }, logged:	 Current messages: {Number(0), Number(2), Number(1), Number(3), Number(4)}
2025-01-17 13:22:16,934{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(22), message: Number(4) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,935{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(21), message: Number(4) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,936{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,936{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(18), in_reply_to: 22 } }, logged:	 Executing callback for 22
2025-01-17 13:22:16,937{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(18), in_reply_to: 22 } }
2025-01-17 13:22:16,938{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, and it is removing n5 from current unacked ["n1", "n5"]
2025-01-17 13:22:16,938{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, and here is Unacked after removing n5: ["n1"]
2025-01-17 13:22:16,939{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,939{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(18), in_reply_to: 21 } }, logged:	 Executing callback for 21
2025-01-17 13:22:16,940{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(18), in_reply_to: 21 } }
2025-01-17 13:22:16,940{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:16,940{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:16,942{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:16,942{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:16,942{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(15), message: Number(4) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:16,943{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:16,943{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(19), in_reply_to: 15 } }, logged:	 Executing callback for 15
2025-01-17 13:22:16,943{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(19), in_reply_to: 15 } }
2025-01-17 13:22:16,943{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:16,943{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:17,288{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:17,289{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	2
2025-01-17 13:22:17,289{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	6
2025-01-17 13:22:17,290{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:17,291{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(1), message: Number(2) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:17,291{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, logged:	 Received broadcast msg Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }
2025-01-17 13:22:17,292{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, logged:	 Current messages: {Number(0), Number(2), Number(1), Number(3), Number(4)}
2025-01-17 13:22:17,292{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, logged:	 Update messages: {Number(0), Number(2), Number(6), Number(1), Number(3), Number(4)}
2025-01-17 13:22:17,293{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,293{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(6) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(6) } }
2025-01-17 13:22:17,294{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }
2025-01-17 13:22:17,295{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }
2025-01-17 13:22:17,296{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, logged:	 Initial unacked: ["n2", "n4"]
2025-01-17 13:22:17,298{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:17,298{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:17,299{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:17,296{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(6) } }, logged:	 Current messages: {Number(1), Number(3), Number(0), Number(2), Number(5), Number(4)}
2025-01-17 13:22:17,300{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(6) } }, logged:	 Update messages: {Number(1), Number(6), Number(3), Number(0), Number(2), Number(5), Number(4)}
2025-01-17 13:22:17,300{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(6) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,300{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(6) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,300{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(6) } }, logged:	 Initial unacked: ["n3", "n1"]
2025-01-17 13:22:17,300{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(6) } }, logged:	 Unacked: empty? false, ["n3", "n1"]
2025-01-17 13:22:17,301{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:17,296{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, logged:	 Current messages: {Number(2), Number(3), Number(1), Number(0), Number(4)}
2025-01-17 13:22:17,301{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, logged:	 Update messages: {Number(2), Number(3), Number(6), Number(1), Number(0), Number(4)}
2025-01-17 13:22:17,301{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,301{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, logged:	 Initial unacked: ["n1"]
2025-01-17 13:22:17,301{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:17,301{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:17,297{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }, logged:	 Current messages: {Number(4), Number(3), Number(2), Number(0), Number(1)}
2025-01-17 13:22:17,302{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }, logged:	 Update messages: {Number(4), Number(3), Number(2), Number(6), Number(0), Number(1)}
2025-01-17 13:22:17,302{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,302{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:17,302{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:17,302{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:17,305{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(19), message: Number(6) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(19), message: Number(6) } }
2025-01-17 13:22:17,306{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(19), message: Number(6) } }, logged:	 Current messages: {Number(1), Number(6), Number(3), Number(0), Number(2), Number(5), Number(4)}
2025-01-17 13:22:17,306{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(19), message: Number(6) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:17,308{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:17,308{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(17), in_reply_to: 19 } }, logged:	 Executing callback for 19
2025-01-17 13:22:17,308{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(17), in_reply_to: 19 } }
2025-01-17 13:22:17,308{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:17,308{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:17,464{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:17,464{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:17,464{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:17,465{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	3
2025-01-17 13:22:17,466{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	7
2025-01-17 13:22:17,466{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:17,466{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:17,467{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(3) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:17,469{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, logged:	 Received broadcast msg Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }
2025-01-17 13:22:17,469{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, logged:	 Current messages: {Number(4), Number(3), Number(2), Number(6), Number(0), Number(1)}
2025-01-17 13:22:17,469{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, logged:	 Update messages: {Number(4), Number(3), Number(2), Number(6), Number(7), Number(0), Number(1)}
2025-01-17 13:22:17,469{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,470{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,470{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, logged:	 Initial unacked: ["n4", "n2"]
2025-01-17 13:22:17,470{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:17,470{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:17,470{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:17,471{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(24), in_reply_to: 8 } }, logged:	 Executing callback for 8
2025-01-17 13:22:17,471{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(24), in_reply_to: 8 } }
2025-01-17 13:22:17,471{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:17,471{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(2), message: Number(3) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:17,472{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:17,472{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }
2025-01-17 13:22:17,472{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, logged:	 Current messages: {Number(2), Number(3), Number(6), Number(1), Number(0), Number(4)}
2025-01-17 13:22:17,473{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, logged:	 Update messages: {Number(2), Number(3), Number(6), Number(1), Number(0), Number(7), Number(4)}
2025-01-17 13:22:17,473{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,473{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, logged:	 Initial unacked: ["n5"]
2025-01-17 13:22:17,473{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:17,473{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:17,474{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }
2025-01-17 13:22:17,474{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }, logged:	 Current messages: {Number(0), Number(2), Number(6), Number(1), Number(3), Number(4)}
2025-01-17 13:22:17,474{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }, logged:	 Update messages: {Number(0), Number(2), Number(6), Number(1), Number(3), Number(4), Number(7)}
2025-01-17 13:22:17,475{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,475{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:17,475{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:17,475{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:17,477{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(22), message: Number(7) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(22), message: Number(7) } }
2025-01-17 13:22:17,478{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(22), message: Number(7) } }, logged:	 Current messages: {Number(1), Number(6), Number(3), Number(0), Number(2), Number(5), Number(4)}
2025-01-17 13:22:17,478{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(22), message: Number(7) } }, logged:	 Update messages: {Number(1), Number(0), Number(4), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:17,479{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(22), message: Number(7) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,479{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(22), message: Number(7) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:17,480{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(22), message: Number(7) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:17,480{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(22), message: Number(7) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:17,481{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:17,481{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(7) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(7) } }
2025-01-17 13:22:17,482{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(7) } }, logged:	 Current messages: {Number(1), Number(0), Number(4), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:17,482{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(7) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:17,483{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:17,484{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(18), in_reply_to: 23 } }, logged:	 Executing callback for 23
2025-01-17 13:22:17,484{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(18), in_reply_to: 23 } }
2025-01-17 13:22:17,484{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:17,484{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:17,671{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:17,672{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(8), message: Number(5) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(8), message: Number(5) } }
2025-01-17 13:22:17,672{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(8), message: Number(5) } }, logged:	 Current messages: {Number(1), Number(0), Number(4), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:17,672{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(8), message: Number(5) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:17,672{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:17,673{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:17,674{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(19), in_reply_to: 8 } }, logged:	 Executing callback for 8
2025-01-17 13:22:17,674{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } } and it received response Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(19), in_reply_to: 8 } }
2025-01-17 13:22:17,674{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:17,674{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:17,923{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:17,923{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:17,924{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:17,924{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(4) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:17,924{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(23), in_reply_to: 14 } }, logged:	 Executing callback for 14
2025-01-17 13:22:17,925{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(23), in_reply_to: 14 } }
2025-01-17 13:22:17,925{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:17,925{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:17,931{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:17,931{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:17,932{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	4
2025-01-17 13:22:17,932{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(3), message: Number(4) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:17,932{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-01-17 13:22:17,933{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[2 3 6 1 0 7 4]
2025-01-17 13:22:18,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:18,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:18,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:18,294{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:18,294{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:18,297{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(28), message: Number(6) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(28), message: Number(6) } }
2025-01-17 13:22:18,297{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(28), message: Number(6) } }, logged:	 Current messages: {Number(4), Number(3), Number(2), Number(6), Number(7), Number(0), Number(1)}
2025-01-17 13:22:18,297{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(28), message: Number(6) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:18,297{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:18,297{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:18,297{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(23), message: Number(6) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:18,299{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:18,299{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(24), in_reply_to: 23 } }, logged:	 Executing callback for 23
2025-01-17 13:22:18,299{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(24), in_reply_to: 23 } }
2025-01-17 13:22:18,299{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:18,299{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:18,299{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:18,299{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(24), in_reply_to: 28 } }, logged:	 Executing callback for 28
2025-01-17 13:22:18,300{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(24), in_reply_to: 28 } }
2025-01-17 13:22:18,300{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:18,300{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:18,300{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(24), message: Number(6) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(24), message: Number(6) } }
2025-01-17 13:22:18,300{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(25), message: Number(6) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(25), message: Number(6) } }
2025-01-17 13:22:18,300{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(25), message: Number(6) } }, logged:	 Current messages: {Number(2), Number(3), Number(6), Number(1), Number(0), Number(7), Number(4)}
2025-01-17 13:22:18,301{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(24), message: Number(6) } }, logged:	 Current messages: {Number(1), Number(0), Number(4), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:18,301{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(25), message: Number(6) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:18,301{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(24), message: Number(6) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:18,302{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:18,302{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(20), in_reply_to: 24 } }, logged:	 Executing callback for 24
2025-01-17 13:22:18,302{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(20), in_reply_to: 24 } }
2025-01-17 13:22:18,302{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, and it is removing n2 from current unacked ["n2", "n4"]
2025-01-17 13:22:18,302{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, and here is Unacked after removing n2: ["n4"]
2025-01-17 13:22:18,303{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:18,303{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(29), in_reply_to: 25 } }, logged:	 Executing callback for 25
2025-01-17 13:22:18,307{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(29), in_reply_to: 25 } }
2025-01-17 13:22:18,307{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:18,307{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:18,327{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-01-17 13:22:18,328{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[2 3 6 1 0 7 4]
2025-01-17 13:22:18,472{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:18,473{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:18,473{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:18,474{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(26), message: Number(7) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(26), message: Number(7) } }
2025-01-17 13:22:18,474{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:18,474{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:18,475{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(26), message: Number(7) } }, logged:	 Current messages: {Number(2), Number(3), Number(6), Number(1), Number(0), Number(7), Number(4)}
2025-01-17 13:22:18,475{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(26), message: Number(7) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:18,476{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(27), message: Number(7) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(27), message: Number(7) } }
2025-01-17 13:22:18,476{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(27), message: Number(7) } }, logged:	 Current messages: {Number(1), Number(0), Number(4), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:18,476{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(27), message: Number(7) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:18,477{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(31), message: Number(7) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(31), message: Number(7) } }
2025-01-17 13:22:18,478{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(31), message: Number(7) } }, logged:	 Current messages: {Number(0), Number(2), Number(6), Number(1), Number(3), Number(4), Number(7)}
2025-01-17 13:22:18,478{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(31), message: Number(7) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:18,479{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:18,479{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(32), in_reply_to: 26 } }, logged:	 Executing callback for 26
2025-01-17 13:22:18,479{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(32), in_reply_to: 26 } }
2025-01-17 13:22:18,479{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, and it is removing n4 from current unacked ["n4", "n2"]
2025-01-17 13:22:18,479{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, and here is Unacked after removing n4: ["n2"]
2025-01-17 13:22:18,479{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:18,480{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(21), in_reply_to: 27 } }, logged:	 Executing callback for 27
2025-01-17 13:22:18,480{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(21), in_reply_to: 27 } }
2025-01-17 13:22:18,480{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:18,480{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:18,481{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:18,481{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(26), in_reply_to: 31 } }, logged:	 Executing callback for 31
2025-01-17 13:22:18,481{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(26), in_reply_to: 31 } }
2025-01-17 13:22:18,482{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:18,482{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:18,482{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(25), message: Number(7) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:18,482{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:18,482{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:18,483{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:18,483{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(27), in_reply_to: 25 } }, logged:	 Executing callback for 25
2025-01-17 13:22:18,483{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(27), in_reply_to: 25 } }
2025-01-17 13:22:18,484{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:18,484{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:18,671{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:18,672{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:18,672{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(2), message: Number(5) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:18,672{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	5
2025-01-17 13:22:18,718{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	8
2025-01-17 13:22:18,718{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, logged:	 Received broadcast msg Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }
2025-01-17 13:22:18,719{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, logged:	 Current messages: {Number(5), Number(2), Number(0), Number(1)}
2025-01-17 13:22:18,719{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, logged:	 Update messages: {Number(5), Number(8), Number(2), Number(0), Number(1)}
2025-01-17 13:22:18,719{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:18,720{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:18,720{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:18,720{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(10), message: Number(8) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(10), message: Number(8) } }
2025-01-17 13:22:18,720{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(10), message: Number(8) } }, logged:	 Current messages: {Number(1), Number(0), Number(4), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:18,720{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(10), message: Number(8) } }, logged:	 Update messages: {Number(1), Number(8), Number(0), Number(4), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:18,721{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(10), message: Number(8) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:18,721{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(10), message: Number(8) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:18,721{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(10), message: Number(8) } }, logged:	 Initial unacked: ["n5", "n1"]
2025-01-17 13:22:18,721{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(10), message: Number(8) } }, logged:	 Unacked: empty? false, ["n5", "n1"]
2025-01-17 13:22:18,721{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:18,721{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:19,115{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	9
2025-01-17 13:22:19,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, logged:	 Received broadcast msg Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }
2025-01-17 13:22:19,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, logged:	 Current messages: {Number(2), Number(3), Number(6), Number(1), Number(0), Number(7), Number(4)}
2025-01-17 13:22:19,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, logged:	 Update messages: {Number(2), Number(1), Number(9), Number(3), Number(7), Number(6), Number(0), Number(4)}
2025-01-17 13:22:19,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:19,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:19,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, logged:	 Initial unacked: ["n1", "n5"]
2025-01-17 13:22:19,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:19,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:19,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:19,118{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }
2025-01-17 13:22:19,118{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }
2025-01-17 13:22:19,119{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Current messages: {Number(4), Number(3), Number(2), Number(6), Number(7), Number(0), Number(1)}
2025-01-17 13:22:19,119{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Update messages: {Number(6), Number(9), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:19,120{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:19,119{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }, logged:	 Current messages: {Number(0), Number(2), Number(6), Number(1), Number(3), Number(4), Number(7)}
2025-01-17 13:22:19,120{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }
2025-01-17 13:22:19,121{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }, logged:	 Current messages: {Number(1), Number(8), Number(0), Number(4), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:19,121{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }, logged:	 Update messages: {Number(6), Number(9), Number(7), Number(0), Number(2), Number(1), Number(3), Number(4)}
2025-01-17 13:22:19,121{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:19,121{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }, logged:	 Update messages: {Number(1), Number(8), Number(0), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:19,121{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:19,121{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:19,121{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:19,121{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:19,121{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:19,122{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:19,122{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:19,122{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:19,122{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:19,123{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:19,123{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:19,123{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(22), in_reply_to: 28 } }, logged:	 Executing callback for 28
2025-01-17 13:22:19,124{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(22), in_reply_to: 28 } }
2025-01-17 13:22:19,124{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:19,124{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:19,123{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:19,124{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }
2025-01-17 13:22:19,124{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }, logged:	 Current messages: {Number(1), Number(8), Number(0), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:19,124{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(28), message: Number(9) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:19,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:19,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:19,294{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:19,295{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:19,295{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:19,295{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(22), message: Number(6) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:19,295{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	6
2025-01-17 13:22:19,296{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:19,296{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(35), in_reply_to: 22 } }, logged:	 Executing callback for 22
2025-01-17 13:22:19,297{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(35), in_reply_to: 22 } }
2025-01-17 13:22:19,297{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:19,297{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(2), message: Number(6) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:19,344{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-01-17 13:22:19,346{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[6 9 7 0 2 1 3 4]
2025-01-17 13:22:19,473{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:19,473{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	7
2025-01-17 13:22:19,473{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:19,474{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:19,475{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:19,476{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:19,476{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(21), message: Number(7) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:19,477{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:19,478{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(36), in_reply_to: 21 } }, logged:	 Executing callback for 21
2025-01-17 13:22:19,478{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(36), in_reply_to: 21 } }
2025-01-17 13:22:19,478{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:19,478{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(3), message: Number(7) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:19,548{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:broadcast	0	:net-timeout
2025-01-17 13:22:19,708{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-01-17 13:22:19,709{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[6 9 7 0 2 1 3 4]
2025-01-17 13:22:19,719{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:19,720{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:19,720{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(11), message: Number(8) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(11), message: Number(8) } }
2025-01-17 13:22:19,720{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(11), message: Number(8) } }, logged:	 Current messages: {Number(1), Number(8), Number(0), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:19,720{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(11), message: Number(8) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:19,721{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:19,721{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(23), in_reply_to: 11 } }, logged:	 Executing callback for 11
2025-01-17 13:22:19,722{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } } and it received response Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(23), in_reply_to: 11 } }
2025-01-17 13:22:19,722{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:19,722{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:19,922{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:19,923{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 9 7 1 3 2 4 0]
2025-01-17 13:22:19,973{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:19,974{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 9 7 1 3 2 4 0]
2025-01-17 13:22:20,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:20,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:20,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:20,117{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(38), message: Number(9) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(38), message: Number(9) } }
2025-01-17 13:22:20,118{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(37), message: Number(9) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(37), message: Number(9) } }
2025-01-17 13:22:20,118{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(37), message: Number(9) } }, logged:	 Current messages: {Number(6), Number(9), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:20,118{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(37), message: Number(9) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:20,118{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(38), message: Number(9) } }, logged:	 Current messages: {Number(6), Number(9), Number(7), Number(0), Number(2), Number(1), Number(3), Number(4)}
2025-01-17 13:22:20,118{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(38), message: Number(9) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:20,118{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:20,118{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(32), in_reply_to: 38 } }, logged:	 Executing callback for 38
2025-01-17 13:22:20,119{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(32), in_reply_to: 38 } }
2025-01-17 13:22:20,119{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, and it is removing n5 from current unacked ["n1", "n5"]
2025-01-17 13:22:20,119{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, and here is Unacked after removing n5: ["n1"]
2025-01-17 13:22:20,119{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:20,119{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(32), in_reply_to: 37 } }, logged:	 Executing callback for 37
2025-01-17 13:22:20,119{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(32), in_reply_to: 37 } }
2025-01-17 13:22:20,119{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:20,119{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:20,119{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:20,119{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:20,120{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(33), message: Number(9) } }
2025-01-17 13:22:20,120{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:20,120{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:20,120{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(34), message: Number(9) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:20,121{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Current messages: {Number(1), Number(8), Number(0), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:20,121{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:20,121{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:20,122{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(33), in_reply_to: 34 } }, logged:	 Executing callback for 34
2025-01-17 13:22:20,122{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(33), in_reply_to: 34 } }
2025-01-17 13:22:20,122{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:20,123{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:20,123{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:20,124{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(24), in_reply_to: 33 } }, logged:	 Executing callback for 33
2025-01-17 13:22:20,124{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(24), in_reply_to: 33 } }
2025-01-17 13:22:20,124{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:20,124{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:20,322{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:read	nil
2025-01-17 13:22:20,324{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:ok	:read	[1 8 0 4 9 3 2 7 5 6]
2025-01-17 13:22:20,568{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-01-17 13:22:20,569{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[6 9 7 0 2 1 3 4]
2025-01-17 13:22:20,720{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:20,720{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:20,720{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(3), message: Number(8) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:20,720{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	8
2025-01-17 13:22:20,750{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-01-17 13:22:20,751{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[6 9 7 0 2 1 3 4]
2025-01-17 13:22:20,823{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	10
2025-01-17 13:22:20,824{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, logged:	 Received broadcast msg Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }
2025-01-17 13:22:20,824{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, logged:	 Current messages: {Number(6), Number(9), Number(7), Number(0), Number(2), Number(1), Number(3), Number(4)}
2025-01-17 13:22:20,824{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, logged:	 Update messages: {Number(6), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4)}
2025-01-17 13:22:20,824{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:20,824{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:20,824{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, logged:	 Initial unacked: ["n2", "n4"]
2025-01-17 13:22:20,824{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:20,824{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:20,824{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:20,826{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(36), message: Number(10) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(36), message: Number(10) } }
2025-01-17 13:22:20,826{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(36), message: Number(10) } }, logged:	 Current messages: {Number(1), Number(8), Number(0), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:20,826{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }
2025-01-17 13:22:20,826{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, logged:	 Current messages: {Number(2), Number(1), Number(9), Number(3), Number(7), Number(6), Number(0), Number(4)}
2025-01-17 13:22:20,826{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, logged:	 Update messages: {Number(2), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(4)}
2025-01-17 13:22:20,827{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:20,827{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, logged:	 Initial unacked: ["n1"]
2025-01-17 13:22:20,827{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:20,827{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:20,827{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }
2025-01-17 13:22:20,828{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(36), message: Number(10) } }, logged:	 Update messages: {Number(1), Number(8), Number(10), Number(0), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:20,828{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 Current messages: {Number(6), Number(9), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:20,828{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 Update messages: {Number(6), Number(9), Number(10), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:20,828{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(36), message: Number(10) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:20,828{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:20,828{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(36), message: Number(10) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:20,828{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(36), message: Number(10) } }, logged:	 Initial unacked: ["n3", "n1"]
2025-01-17 13:22:20,829{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(36), message: Number(10) } }, logged:	 Unacked: empty? false, ["n3", "n1"]
2025-01-17 13:22:20,829{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:20,829{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:20,829{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:20,829{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:20,830{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(34), message: Number(10) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(34), message: Number(10) } }
2025-01-17 13:22:20,833{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:20,833{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(26), in_reply_to: 34 } }, logged:	 Executing callback for 34
2025-01-17 13:22:20,833{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(26), in_reply_to: 34 } }
2025-01-17 13:22:20,833{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:20,833{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(34), message: Number(10) } }, logged:	 Current messages: {Number(1), Number(8), Number(10), Number(0), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:20,834{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:20,834{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(34), message: Number(10) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:21,103{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:21,105{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 9 10 7 1 3 2 4 0]
2025-01-17 13:22:21,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:21,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:21,116{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:21,116{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	9
2025-01-17 13:22:21,119{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:21,119{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:21,120{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(33), message: Number(9) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:21,120{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:21,121{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(36), in_reply_to: 33 } }, logged:	 Executing callback for 33
2025-01-17 13:22:21,121{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(36), in_reply_to: 33 } }
2025-01-17 13:22:21,122{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:21,122{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(6), message: Number(9) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:21,150{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:21,151{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 9 10 7 1 3 2 4 0]
2025-01-17 13:22:21,420{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:broadcast	11
2025-01-17 13:22:21,422{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c15", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(11) } }, logged:	 Received broadcast msg Message { src: "c15", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(11) } }
2025-01-17 13:22:21,422{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c15", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(11) } }, logged:	 Current messages: {Number(1), Number(8), Number(10), Number(0), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:21,422{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c15", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(11) } }, logged:	 Update messages: {Number(1), Number(8), Number(11), Number(10), Number(0), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:21,422{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c15", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(11) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:21,422{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c15", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(11) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:21,422{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c15", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(11) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:21,422{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c15", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(11) } }, logged:	 Initial unacked: ["n5", "n3", "n1"]
2025-01-17 13:22:21,422{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c15", dest: "n2", body: Broadcast { msg_id: Some(2), message: Number(11) } }, logged:	 Unacked: empty? false, ["n5", "n3", "n1"]
2025-01-17 13:22:21,422{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:21,786{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	12
2025-01-17 13:22:21,787{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, logged:	 Received broadcast msg Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }
2025-01-17 13:22:21,787{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, logged:	 Current messages: {Number(5), Number(8), Number(2), Number(0), Number(1)}
2025-01-17 13:22:21,787{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, logged:	 Update messages: {Number(5), Number(8), Number(2), Number(12), Number(0), Number(1)}
2025-01-17 13:22:21,787{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:21,787{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:21,787{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:21,788{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:21,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(12) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(12) } }
2025-01-17 13:22:21,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(12) } }, logged:	 Current messages: {Number(1), Number(8), Number(11), Number(10), Number(0), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:21,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(12) } }, logged:	 Update messages: {Number(1), Number(8), Number(11), Number(10), Number(0), Number(12), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:21,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(12) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:21,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(12) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:21,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(12) } }, logged:	 Initial unacked: ["n5", "n1"]
2025-01-17 13:22:21,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(13), message: Number(12) } }, logged:	 Unacked: empty? false, ["n5", "n1"]
2025-01-17 13:22:21,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:21,825{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:21,825{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:21,825{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:21,826{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(38), message: Number(10) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(38), message: Number(10) } }
2025-01-17 13:22:21,826{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(38), message: Number(10) } }, logged:	 Current messages: {Number(1), Number(8), Number(11), Number(10), Number(0), Number(12), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:21,826{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(38), message: Number(10) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:21,827{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:21,827{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:21,828{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(41), message: Number(10) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(41), message: Number(10) } }
2025-01-17 13:22:21,828{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(41), message: Number(10) } }, logged:	 Current messages: {Number(6), Number(9), Number(10), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:21,829{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(41), message: Number(10) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:21,829{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:21,830{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(27), in_reply_to: 38 } }, logged:	 Executing callback for 38
2025-01-17 13:22:21,830{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(27), in_reply_to: 38 } }
2025-01-17 13:22:21,830{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, and it is removing n2 from current unacked ["n2", "n4"]
2025-01-17 13:22:21,830{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:21,830{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, and here is Unacked after removing n2: ["n4"]
2025-01-17 13:22:21,831{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(39), message: Number(10) } }
2025-01-17 13:22:21,831{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 Current messages: {Number(2), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(4)}
2025-01-17 13:22:21,831{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:21,831{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:21,831{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(39), message: Number(10) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:21,832{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:21,833{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(42), in_reply_to: 39 } }, logged:	 Executing callback for 39
2025-01-17 13:22:21,833{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(42), in_reply_to: 39 } }
2025-01-17 13:22:21,833{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:21,833{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:21,833{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:21,833{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(38), in_reply_to: 41 } }, logged:	 Executing callback for 41
2025-01-17 13:22:21,834{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(38), in_reply_to: 41 } }
2025-01-17 13:22:21,834{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:21,834{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:21,834{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:21,834{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(38), in_reply_to: 39 } }, logged:	 Executing callback for 39
2025-01-17 13:22:21,835{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(38), in_reply_to: 39 } }
2025-01-17 13:22:21,835{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:21,835{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:21,849{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-01-17 13:22:21,850{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[2 1 10 9 3 7 6 0 4]
2025-01-17 13:22:22,066{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:22,067{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 9 10 7 1 3 2 4 0]
2025-01-17 13:22:22,085{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:22,086{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 9 10 7 1 3 2 4 0]
2025-01-17 13:22:22,224{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:22,226{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 9 10 7 1 3 2 4 0]
2025-01-17 13:22:22,313{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	13
2025-01-17 13:22:22,314{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, logged:	 Received broadcast msg Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }
2025-01-17 13:22:22,315{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, logged:	 Current messages: {Number(2), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(4)}
2025-01-17 13:22:22,315{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, logged:	 Update messages: {Number(2), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(4)}
2025-01-17 13:22:22,315{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,315{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:22,315{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,316{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, logged:	 Initial unacked: ["n1", "n5"]
2025-01-17 13:22:22,316{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:22,316{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:22,317{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:22,317{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 9 10 7 1 3 2 4 0]
2025-01-17 13:22:22,318{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }
2025-01-17 13:22:22,319{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Current messages: {Number(6), Number(9), Number(10), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:22,320{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Update messages: {Number(6), Number(13), Number(9), Number(10), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:22,321{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,321{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:22,322{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:22,322{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:22,323{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }
2025-01-17 13:22:22,323{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }, logged:	 Current messages: {Number(6), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4)}
2025-01-17 13:22:22,324{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }, logged:	 Update messages: {Number(6), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13)}
2025-01-17 13:22:22,324{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,325{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:22,325{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:22,326{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:22,327{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(44), message: Number(13) } }
2025-01-17 13:22:22,327{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Current messages: {Number(1), Number(8), Number(11), Number(10), Number(0), Number(12), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:22,328{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Update messages: {Number(1), Number(8), Number(11), Number(10), Number(0), Number(12), Number(13), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:22,328{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,329{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,329{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:22,330{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:22,330{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:22,331{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(40), message: Number(13) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(40), message: Number(13) } }
2025-01-17 13:22:22,331{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(40), message: Number(13) } }, logged:	 Current messages: {Number(1), Number(8), Number(11), Number(10), Number(0), Number(12), Number(13), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:22,331{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(40), message: Number(13) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:22,333{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:22,333{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(28), in_reply_to: 40 } }, logged:	 Executing callback for 40
2025-01-17 13:22:22,333{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(28), in_reply_to: 40 } }
2025-01-17 13:22:22,334{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:22,334{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:22,629{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:22,630{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 13 9 10 7 1 3 2 4 0]
2025-01-17 13:22:22,788{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:22,788{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:22,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(14), message: Number(12) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(14), message: Number(12) } }
2025-01-17 13:22:22,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(14), message: Number(12) } }, logged:	 Current messages: {Number(1), Number(8), Number(11), Number(10), Number(0), Number(12), Number(13), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:22,789{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(14), message: Number(12) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:22,789{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:22,790{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(29), in_reply_to: 14 } }, logged:	 Executing callback for 14
2025-01-17 13:22:22,790{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } } and it received response Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(29), in_reply_to: 14 } }
2025-01-17 13:22:22,790{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:22,790{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:22,799{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:22,800{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 13 9 10 7 1 3 2 4 0]
2025-01-17 13:22:22,825{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:22,826{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	10
2025-01-17 13:22:22,826{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:22,826{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:22,827{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:22,828{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:22,828{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(37), message: Number(10) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:22,829{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:22,829{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(46), in_reply_to: 37 } }, logged:	 Executing callback for 37
2025-01-17 13:22:22,829{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(46), in_reply_to: 37 } }
2025-01-17 13:22:22,829{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:22,829{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(7), message: Number(10) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:22,951{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	14
2025-01-17 13:22:22,952{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, logged:	 Received broadcast msg Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }
2025-01-17 13:22:22,952{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, logged:	 Current messages: {Number(6), Number(13), Number(9), Number(10), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:22,952{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, logged:	 Update messages: {Number(14), Number(6), Number(13), Number(9), Number(10), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:22,952{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,952{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,952{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, logged:	 Initial unacked: ["n4", "n2"]
2025-01-17 13:22:22,952{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:22,953{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:22,953{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:22,953{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }
2025-01-17 13:22:22,953{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Current messages: {Number(2), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(4)}
2025-01-17 13:22:22,953{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Update messages: {Number(2), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(4), Number(14)}
2025-01-17 13:22:22,953{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,953{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Initial unacked: ["n5"]
2025-01-17 13:22:22,953{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:22,954{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:22,954{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }
2025-01-17 13:22:22,954{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Current messages: {Number(6), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13)}
2025-01-17 13:22:22,954{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Update messages: {Number(6), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:22,954{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,954{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:22,954{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:22,954{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:22,954{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(48), message: Number(14) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(48), message: Number(14) } }
2025-01-17 13:22:22,954{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(48), message: Number(14) } }, logged:	 Current messages: {Number(1), Number(8), Number(11), Number(10), Number(0), Number(12), Number(13), Number(4), Number(9), Number(3), Number(2), Number(7), Number(5), Number(6)}
2025-01-17 13:22:22,954{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(48), message: Number(14) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(4), Number(9), Number(12), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:22,954{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(48), message: Number(14) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,955{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(48), message: Number(14) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:22,955{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(48), message: Number(14) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:22,955{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(48), message: Number(14) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:22,955{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:22,955{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(42), message: Number(14) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(42), message: Number(14) } }
2025-01-17 13:22:22,955{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(42), message: Number(14) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(4), Number(9), Number(12), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:22,955{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(42), message: Number(14) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:22,959{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:22,959{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(30), in_reply_to: 42 } }, logged:	 Executing callback for 42
2025-01-17 13:22:22,959{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(30), in_reply_to: 42 } }
2025-01-17 13:22:22,960{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:22,960{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:23,311{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-01-17 13:22:23,312{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[6 9 7 0 2 10 1 3 4 13 14]
2025-01-17 13:22:23,317{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:23,317{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:23,317{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:23,318{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(48), message: Number(13) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(48), message: Number(13) } }
2025-01-17 13:22:23,319{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(48), message: Number(13) } }, logged:	 Current messages: {Number(14), Number(6), Number(13), Number(9), Number(10), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:23,319{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(48), message: Number(13) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:23,319{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(49), message: Number(13) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(49), message: Number(13) } }
2025-01-17 13:22:23,319{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(49), message: Number(13) } }, logged:	 Current messages: {Number(6), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:23,319{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(49), message: Number(13) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:23,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:23,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(49), in_reply_to: 48 } }, logged:	 Executing callback for 48
2025-01-17 13:22:23,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(49), in_reply_to: 48 } }
2025-01-17 13:22:23,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, and it is removing n1 from current unacked ["n1", "n5"]
2025-01-17 13:22:23,322{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, and here is Unacked after removing n1: ["n5"]
2025-01-17 13:22:23,322{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:23,322{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(44), in_reply_to: 49 } }, logged:	 Executing callback for 49
2025-01-17 13:22:23,322{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(44), in_reply_to: 49 } }
2025-01-17 13:22:23,322{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:23,322{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:23,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:23,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:23,323{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(50), message: Number(13) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(50), message: Number(13) } }
2025-01-17 13:22:23,324{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(50), message: Number(13) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(4), Number(9), Number(12), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:23,324{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(50), message: Number(13) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:23,325{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:23,325{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(31), in_reply_to: 50 } }, logged:	 Executing callback for 50
2025-01-17 13:22:23,325{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(31), in_reply_to: 50 } }
2025-01-17 13:22:23,325{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:23,326{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:23,327{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:23,327{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:23,327{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(45), message: Number(13) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:23,327{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:23,327{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(45), in_reply_to: 45 } }, logged:	 Executing callback for 45
2025-01-17 13:22:23,328{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(45), in_reply_to: 45 } }
2025-01-17 13:22:23,328{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:23,328{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:23,658{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	15
2025-01-17 13:22:23,659{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, logged:	 Received broadcast msg Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }
2025-01-17 13:22:23,659{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, logged:	 Current messages: {Number(6), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:23,659{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, logged:	 Update messages: {Number(15), Number(6), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:23,660{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:23,660{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:23,660{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, logged:	 Initial unacked: ["n2", "n4"]
2025-01-17 13:22:23,660{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:23,660{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:23,660{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(46), message: Number(15) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(46), message: Number(15) } }
2025-01-17 13:22:23,661{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(46), message: Number(15) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(4), Number(9), Number(12), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:23,661{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(46), message: Number(15) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(9), Number(12), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:23,661{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(46), message: Number(15) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:23,661{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(46), message: Number(15) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:23,662{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(46), message: Number(15) } }, logged:	 Initial unacked: ["n3", "n1"]
2025-01-17 13:22:23,662{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(46), message: Number(15) } }, logged:	 Unacked: empty? false, ["n3", "n1"]
2025-01-17 13:22:23,662{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:23,662{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:23,663{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }
2025-01-17 13:22:23,663{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, logged:	 Current messages: {Number(2), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(4), Number(14)}
2025-01-17 13:22:23,663{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, logged:	 Update messages: {Number(2), Number(15), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(4), Number(14)}
2025-01-17 13:22:23,663{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:23,663{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, logged:	 Initial unacked: ["n1"]
2025-01-17 13:22:23,664{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:23,664{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:23,664{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }
2025-01-17 13:22:23,664{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }, logged:	 Current messages: {Number(14), Number(6), Number(13), Number(9), Number(10), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:23,665{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }, logged:	 Update messages: {Number(14), Number(6), Number(13), Number(15), Number(9), Number(10), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:23,666{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:23,666{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:23,666{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:23,666{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:23,667{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(51), message: Number(15) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(51), message: Number(15) } }
2025-01-17 13:22:23,668{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(51), message: Number(15) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(9), Number(12), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:23,668{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(51), message: Number(15) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:23,669{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:23,669{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(32), in_reply_to: 51 } }, logged:	 Executing callback for 51
2025-01-17 13:22:23,669{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(32), in_reply_to: 51 } }
2025-01-17 13:22:23,669{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:23,670{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:23,788{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:23,788{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:23,788{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(4), message: Number(12) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:23,789{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	12
2025-01-17 13:22:23,790{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	16
2025-01-17 13:22:23,790{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, logged:	 Received broadcast msg Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }
2025-01-17 13:22:23,790{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, logged:	 Current messages: {Number(5), Number(8), Number(2), Number(12), Number(0), Number(1)}
2025-01-17 13:22:23,790{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, logged:	 Update messages: {Number(5), Number(8), Number(2), Number(12), Number(16), Number(0), Number(1)}
2025-01-17 13:22:23,790{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:23,791{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:23,791{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:23,791{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:23,792{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(16), message: Number(16) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(16), message: Number(16) } }
2025-01-17 13:22:23,793{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(16), message: Number(16) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(9), Number(12), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:23,796{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(16), message: Number(16) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:23,798{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(16), message: Number(16) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:23,799{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(16), message: Number(16) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:23,800{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(16), message: Number(16) } }, logged:	 Initial unacked: ["n5", "n1"]
2025-01-17 13:22:23,802{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(16), message: Number(16) } }, logged:	 Unacked: empty? false, ["n5", "n1"]
2025-01-17 13:22:23,803{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:23,953{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:23,953{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:23,954{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:23,954{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:23,954{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:23,954{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:23,954{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:23,954{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:23,955{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(52), message: Number(14) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(52), message: Number(14) } }
2025-01-17 13:22:23,956{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(52), message: Number(14) } }, logged:	 Current messages: {Number(2), Number(15), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(4), Number(14)}
2025-01-17 13:22:23,956{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(52), message: Number(14) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:23,956{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(53), message: Number(14) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(53), message: Number(14) } }
2025-01-17 13:22:23,956{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(53), message: Number(14) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:23,957{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(53), message: Number(14) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:23,957{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:23,960{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(48), in_reply_to: 47 } }, logged:	 Executing callback for 47
2025-01-17 13:22:23,960{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(48), in_reply_to: 47 } }
2025-01-17 13:22:23,960{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:23,960{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:23,958{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(51), message: Number(14) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(51), message: Number(14) } }
2025-01-17 13:22:23,960{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(51), message: Number(14) } }, logged:	 Current messages: {Number(15), Number(6), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:23,960{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(51), message: Number(14) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:23,959{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:23,960{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(52), in_reply_to: 52 } }, logged:	 Executing callback for 52
2025-01-17 13:22:23,960{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(52), in_reply_to: 52 } }
2025-01-17 13:22:23,961{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, and it is removing n4 from current unacked ["n4", "n2"]
2025-01-17 13:22:23,961{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, and here is Unacked after removing n4: ["n2"]
2025-01-17 13:22:23,964{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:23,965{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:23,965{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(49), in_reply_to: 51 } }, logged:	 Executing callback for 51
2025-01-17 13:22:23,965{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(33), in_reply_to: 53 } }, logged:	 Executing callback for 53
2025-01-17 13:22:23,966{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(49), in_reply_to: 51 } }
2025-01-17 13:22:23,971{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(33), in_reply_to: 53 } }
2025-01-17 13:22:23,971{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:23,971{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:23,972{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:23,972{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:24,317{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:24,318{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:24,318{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:24,318{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	13
2025-01-17 13:22:24,319{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	17
2025-01-17 13:22:24,319{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, logged:	 Received broadcast msg Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }
2025-01-17 13:22:24,319{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, logged:	 Current messages: {Number(2), Number(15), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(4), Number(14)}
2025-01-17 13:22:24,319{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, logged:	 Update messages: {Number(2), Number(15), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(17), Number(4), Number(14)}
2025-01-17 13:22:24,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:24,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:24,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, logged:	 Initial unacked: ["n1", "n5"]
2025-01-17 13:22:24,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:24,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:24,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:24,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }
2025-01-17 13:22:24,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }, logged:	 Current messages: {Number(15), Number(6), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:24,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }, logged:	 Update messages: {Number(15), Number(6), Number(17), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:24,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:24,322{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:24,322{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:24,322{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:24,322{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }
2025-01-17 13:22:24,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Current messages: {Number(14), Number(6), Number(13), Number(15), Number(9), Number(10), Number(7), Number(1), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:24,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Update messages: {Number(14), Number(6), Number(13), Number(15), Number(9), Number(10), Number(7), Number(1), Number(17), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:24,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:24,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:24,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:24,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:24,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:24,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:24,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(44), message: Number(13) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:24,325{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(54), message: Number(17) } }
2025-01-17 13:22:24,325{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:24,325{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(55), in_reply_to: 44 } }, logged:	 Executing callback for 44
2025-01-17 13:22:24,325{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(55), in_reply_to: 44 } }
2025-01-17 13:22:24,325{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:24,325{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:24,325{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(8), message: Number(13) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:24,325{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:24,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:24,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:24,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:24,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:24,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:24,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(50), message: Number(17) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(50), message: Number(17) } }
2025-01-17 13:22:24,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(50), message: Number(17) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:24,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(50), message: Number(17) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:24,327{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:24,327{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(34), in_reply_to: 50 } }, logged:	 Executing callback for 50
2025-01-17 13:22:24,327{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(34), in_reply_to: 50 } }
2025-01-17 13:22:24,327{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:24,327{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:24,663{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:24,663{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:24,663{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:24,664{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(52), message: Number(15) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(52), message: Number(15) } }
2025-01-17 13:22:24,664{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(51), message: Number(15) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(51), message: Number(15) } }
2025-01-17 13:22:24,665{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(51), message: Number(15) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:24,665{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:24,665{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:24,666{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(52), message: Number(15) } }, logged:	 Current messages: {Number(2), Number(15), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(17), Number(4), Number(14)}
2025-01-17 13:22:24,666{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:24,666{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:24,666{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(50), message: Number(15) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:24,667{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(51), message: Number(15) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:24,667{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(52), message: Number(15) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:24,668{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(56), message: Number(15) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(56), message: Number(15) } }
2025-01-17 13:22:24,669{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(56), message: Number(15) } }, logged:	 Current messages: {Number(14), Number(6), Number(13), Number(15), Number(9), Number(10), Number(7), Number(1), Number(17), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:24,669{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(56), message: Number(15) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:24,670{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:24,671{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(56), in_reply_to: 50 } }, logged:	 Executing callback for 50
2025-01-17 13:22:24,672{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(56), in_reply_to: 50 } }
2025-01-17 13:22:24,672{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:24,672{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:24,673{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:24,673{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(57), in_reply_to: 56 } }, logged:	 Executing callback for 56
2025-01-17 13:22:24,674{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:24,674{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(35), in_reply_to: 51 } }, logged:	 Executing callback for 51
2025-01-17 13:22:24,674{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(35), in_reply_to: 51 } }
2025-01-17 13:22:24,674{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, and it is removing n2 from current unacked ["n2", "n4"]
2025-01-17 13:22:24,674{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, and here is Unacked after removing n2: ["n4"]
2025-01-17 13:22:24,675{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:24,675{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(57), in_reply_to: 52 } }, logged:	 Executing callback for 52
2025-01-17 13:22:24,675{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(57), in_reply_to: 52 } }
2025-01-17 13:22:24,675{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:24,675{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:24,676{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(57), in_reply_to: 56 } }
2025-01-17 13:22:24,676{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:24,676{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:24,790{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:24,791{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:24,791{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(17), message: Number(16) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(17), message: Number(16) } }
2025-01-17 13:22:24,792{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(17), message: Number(16) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:24,792{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(17), message: Number(16) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:24,792{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:24,792{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(36), in_reply_to: 17 } }, logged:	 Executing callback for 17
2025-01-17 13:22:24,792{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } } and it received response Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(36), in_reply_to: 17 } }
2025-01-17 13:22:24,793{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:24,793{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:24,953{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:24,953{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:24,953{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:24,953{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	14
2025-01-17 13:22:24,953{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:24,954{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:24,954{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(14) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:24,954{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:24,955{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:24,955{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(58), in_reply_to: 47 } }, logged:	 Executing callback for 47
2025-01-17 13:22:24,955{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(58), in_reply_to: 47 } }
2025-01-17 13:22:24,955{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[14 6 13 15 9 10 7 1 17 3 2 4 0]
2025-01-17 13:22:24,955{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:24,956{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(14), message: Number(14) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:25,158{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:25,159{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[14 6 13 15 9 10 7 1 17 3 2 4 0]
2025-01-17 13:22:25,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:25,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:25,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:25,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(55), message: Number(17) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:25,322{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(60), message: Number(17) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(60), message: Number(17) } }
2025-01-17 13:22:25,322{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(60), message: Number(17) } }, logged:	 Current messages: {Number(15), Number(6), Number(17), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:25,322{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(60), message: Number(17) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:25,322{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:25,322{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:25,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:25,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(53), in_reply_to: 55 } }, logged:	 Executing callback for 55
2025-01-17 13:22:25,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(53), in_reply_to: 55 } }
2025-01-17 13:22:25,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, and it is removing n5 from current unacked ["n1", "n5"]
2025-01-17 13:22:25,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, and here is Unacked after removing n5: ["n1"]
2025-01-17 13:22:25,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:25,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(54), in_reply_to: 60 } }, logged:	 Executing callback for 60
2025-01-17 13:22:25,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(54), in_reply_to: 60 } }
2025-01-17 13:22:25,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, and it is removing n5 from current unacked ["n1"]
2025-01-17 13:22:25,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, and here is Unacked after removing n5: ["n1"]
2025-01-17 13:22:25,322{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(59), message: Number(17) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(59), message: Number(17) } }
2025-01-17 13:22:25,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(59), message: Number(17) } }, logged:	 Current messages: {Number(14), Number(6), Number(13), Number(15), Number(9), Number(10), Number(7), Number(1), Number(17), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:25,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(59), message: Number(17) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:25,324{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:25,324{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:25,324{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:25,326{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(61), in_reply_to: 59 } }, logged:	 Executing callback for 59
2025-01-17 13:22:25,326{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(61), in_reply_to: 59 } }
2025-01-17 13:22:25,326{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:25,326{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:25,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(62), message: Number(17) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(62), message: Number(17) } }
2025-01-17 13:22:25,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(62), message: Number(17) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:25,327{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(62), message: Number(17) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:25,328{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:25,328{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(37), in_reply_to: 62 } }, logged:	 Executing callback for 62
2025-01-17 13:22:25,328{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(37), in_reply_to: 62 } }
2025-01-17 13:22:25,328{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:25,328{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:25,474{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:25,475{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[14 6 13 15 9 10 7 1 17 3 2 4 0]
2025-01-17 13:22:25,663{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:25,663{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:25,663{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:25,664{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	15
2025-01-17 13:22:25,665{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:25,665{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:25,665{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(47), message: Number(15) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:25,666{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:25,666{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(61), in_reply_to: 47 } }, logged:	 Executing callback for 47
2025-01-17 13:22:25,666{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(61), in_reply_to: 47 } }
2025-01-17 13:22:25,666{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:25,666{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(9), message: Number(15) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:25,791{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:25,791{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:25,791{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(5), message: Number(16) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:25,791{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	16
2025-01-17 13:22:25,835{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-01-17 13:22:25,836{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[5 8 2 12 16 0 1]
2025-01-17 13:22:26,235{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	18
2025-01-17 13:22:26,236{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, logged:	 Received broadcast msg Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }
2025-01-17 13:22:26,237{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, logged:	 Current messages: {Number(5), Number(8), Number(2), Number(12), Number(16), Number(0), Number(1)}
2025-01-17 13:22:26,237{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, logged:	 Update messages: {Number(16), Number(0), Number(8), Number(1), Number(2), Number(18), Number(5), Number(12)}
2025-01-17 13:22:26,237{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,237{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:26,237{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(20), message: Number(18) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(20), message: Number(18) } }
2025-01-17 13:22:26,237{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:26,238{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:26,238{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(20), message: Number(18) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:26,238{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(20), message: Number(18) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(18), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:26,238{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(20), message: Number(18) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,238{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(20), message: Number(18) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,238{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(20), message: Number(18) } }, logged:	 Initial unacked: ["n5", "n1"]
2025-01-17 13:22:26,238{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(20), message: Number(18) } }, logged:	 Unacked: empty? false, ["n5", "n1"]
2025-01-17 13:22:26,238{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:26,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:26,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:26,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:26,322{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	17
2025-01-17 13:22:26,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:26,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:26,323{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(54), message: Number(17) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:26,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:26,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(64), in_reply_to: 54 } }, logged:	 Executing callback for 54
2025-01-17 13:22:26,324{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(64), in_reply_to: 54 } }
2025-01-17 13:22:26,324{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:26,324{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(9), message: Number(17) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:26,393{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	19
2025-01-17 13:22:26,396{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, logged:	 Received broadcast msg Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }
2025-01-17 13:22:26,397{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, logged:	 Current messages: {Number(2), Number(15), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(17), Number(4), Number(14)}
2025-01-17 13:22:26,398{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, logged:	 Update messages: {Number(2), Number(15), Number(19), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(17), Number(4), Number(14)}
2025-01-17 13:22:26,399{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,399{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,399{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, logged:	 Initial unacked: ["n1", "n5"]
2025-01-17 13:22:26,400{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:26,400{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:26,401{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:26,402{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }
2025-01-17 13:22:26,402{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }
2025-01-17 13:22:26,402{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }, logged:	 Current messages: {Number(14), Number(6), Number(13), Number(15), Number(9), Number(10), Number(7), Number(1), Number(17), Number(3), Number(2), Number(4), Number(0)}
2025-01-17 13:22:26,402{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }, logged:	 Update messages: {Number(14), Number(6), Number(13), Number(15), Number(9), Number(10), Number(7), Number(1), Number(17), Number(3), Number(2), Number(19), Number(4), Number(0)}
2025-01-17 13:22:26,402{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,402{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:26,402{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:26,402{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:26,402{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, logged:	 Current messages: {Number(15), Number(6), Number(17), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:26,402{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, logged:	 Update messages: {Number(15), Number(6), Number(17), Number(19), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:26,403{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,403{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:26,403{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:26,403{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:26,405{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(56), message: Number(19) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(56), message: Number(19) } }
2025-01-17 13:22:26,405{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(56), message: Number(19) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(18), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:26,405{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(56), message: Number(19) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(18), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:26,406{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(56), message: Number(19) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,406{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(56), message: Number(19) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,406{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(56), message: Number(19) } }, logged:	 Initial unacked: ["n3", "n1"]
2025-01-17 13:22:26,406{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(56), message: Number(19) } }, logged:	 Unacked: empty? false, ["n3", "n1"]
2025-01-17 13:22:26,406{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:26,410{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:26,410{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(65), message: Number(19) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(65), message: Number(19) } }
2025-01-17 13:22:26,410{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(65), message: Number(19) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(18), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:26,410{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(65), message: Number(19) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:26,410{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(38), in_reply_to: 65 } }, logged:	 Executing callback for 65
2025-01-17 13:22:26,410{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(38), in_reply_to: 65 } }
2025-01-17 13:22:26,411{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:26,411{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:26,421{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:info	:broadcast	11	:net-timeout
2025-01-17 13:22:26,674{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-01-17 13:22:26,675{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[15 6 17 19 9 7 0 2 10 1 3 4 13 14]
2025-01-17 13:22:26,992{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	20
2025-01-17 13:22:26,993{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, logged:	 Received broadcast msg Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }
2025-01-17 13:22:26,993{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, logged:	 Current messages: {Number(14), Number(6), Number(13), Number(15), Number(9), Number(10), Number(7), Number(1), Number(17), Number(3), Number(2), Number(19), Number(4), Number(0)}
2025-01-17 13:22:26,993{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, logged:	 Update messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(4), Number(20), Number(10), Number(3), Number(2), Number(0), Number(14)}
2025-01-17 13:22:26,993{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,994{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,994{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, logged:	 Initial unacked: ["n4", "n2"]
2025-01-17 13:22:26,994{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:26,994{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:26,994{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:26,995{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }
2025-01-17 13:22:26,995{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, logged:	 Current messages: {Number(2), Number(15), Number(19), Number(1), Number(10), Number(9), Number(3), Number(7), Number(6), Number(0), Number(13), Number(17), Number(4), Number(14)}
2025-01-17 13:22:26,995{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, logged:	 Update messages: {Number(2), Number(10), Number(9), Number(3), Number(19), Number(13), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(4), Number(15)}
2025-01-17 13:22:26,995{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,995{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, logged:	 Initial unacked: ["n5"]
2025-01-17 13:22:26,996{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:26,996{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:26,996{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(67), message: Number(20) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(67), message: Number(20) } }
2025-01-17 13:22:26,996{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(67), message: Number(20) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(12), Number(17), Number(0), Number(18), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:26,997{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(67), message: Number(20) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(20), Number(12), Number(17), Number(0), Number(18), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:26,997{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(67), message: Number(20) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,997{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(67), message: Number(20) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,998{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(67), message: Number(20) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:26,998{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(67), message: Number(20) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:26,998{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:26,999{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }
2025-01-17 13:22:26,999{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }, logged:	 Current messages: {Number(15), Number(6), Number(17), Number(19), Number(9), Number(7), Number(0), Number(2), Number(10), Number(1), Number(3), Number(4), Number(13), Number(14)}
2025-01-17 13:22:26,999{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }, logged:	 Update messages: {Number(6), Number(9), Number(10), Number(15), Number(3), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:26,999{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:26,999{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:27,000{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:27,000{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:27,001{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(58), message: Number(20) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(58), message: Number(20) } }
2025-01-17 13:22:27,001{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(58), message: Number(20) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(20), Number(12), Number(17), Number(0), Number(18), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:27,001{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(58), message: Number(20) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:27,002{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:27,002{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(39), in_reply_to: 58 } }, logged:	 Executing callback for 58
2025-01-17 13:22:27,002{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(39), in_reply_to: 58 } }
2025-01-17 13:22:27,002{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:27,002{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:27,109{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:invoke	:broadcast	21
2025-01-17 13:22:27,110{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c16", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(21) } }, logged:	 Received broadcast msg Message { src: "c16", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(21) } }
2025-01-17 13:22:27,110{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c16", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(21) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(20), Number(12), Number(17), Number(0), Number(18), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:27,110{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c16", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(21) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:27,110{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c16", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(21) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:27,110{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c16", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(21) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:27,110{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c16", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(21) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:27,111{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c16", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(21) } }, logged:	 Initial unacked: ["n5", "n3", "n1"]
2025-01-17 13:22:27,111{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c16", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(21) } }, logged:	 Unacked: empty? false, ["n5", "n3", "n1"]
2025-01-17 13:22:27,111{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:27,236{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:27,236{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:27,237{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(18) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(18) } }
2025-01-17 13:22:27,238{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(18) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:27,238{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(21), message: Number(18) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:27,239{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:27,239{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(40), in_reply_to: 21 } }, logged:	 Executing callback for 21
2025-01-17 13:22:27,239{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } } and it received response Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(40), in_reply_to: 21 } }
2025-01-17 13:22:27,240{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:27,240{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:27,314{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	22
2025-01-17 13:22:27,315{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, logged:	 Received broadcast msg Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }
2025-01-17 13:22:27,316{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, logged:	 Current messages: {Number(6), Number(9), Number(10), Number(15), Number(3), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:27,316{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, logged:	 Update messages: {Number(6), Number(9), Number(22), Number(10), Number(15), Number(3), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:27,317{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:27,317{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:27,317{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, logged:	 Initial unacked: ["n2", "n4"]
2025-01-17 13:22:27,318{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:27,318{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:27,318{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:27,320{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(59), message: Number(22) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(59), message: Number(22) } }
2025-01-17 13:22:27,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }
2025-01-17 13:22:27,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, logged:	 Current messages: {Number(2), Number(10), Number(9), Number(3), Number(19), Number(13), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(4), Number(15)}
2025-01-17 13:22:27,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, logged:	 Update messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(4), Number(15)}
2025-01-17 13:22:27,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:27,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, logged:	 Initial unacked: ["n1"]
2025-01-17 13:22:27,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:27,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:27,322{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(59), message: Number(22) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:27,323{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(59), message: Number(22) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(22), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:27,323{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(59), message: Number(22) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:27,324{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(59), message: Number(22) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:27,324{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(59), message: Number(22) } }, logged:	 Initial unacked: ["n3", "n1"]
2025-01-17 13:22:27,324{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(59), message: Number(22) } }, logged:	 Unacked: empty? false, ["n3", "n1"]
2025-01-17 13:22:27,325{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:27,325{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }
2025-01-17 13:22:27,325{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(4), Number(20), Number(10), Number(3), Number(2), Number(0), Number(14)}
2025-01-17 13:22:27,325{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 Update messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(4), Number(20), Number(10), Number(3), Number(2), Number(0), Number(14)}
2025-01-17 13:22:27,326{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:27,326{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:27,326{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:27,326{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:27,326{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(68), message: Number(22) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(68), message: Number(22) } }
2025-01-17 13:22:27,327{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(68), message: Number(22) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(22), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:27,329{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(68), message: Number(22) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:27,330{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:27,330{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(41), in_reply_to: 68 } }, logged:	 Executing callback for 68
2025-01-17 13:22:27,330{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(41), in_reply_to: 68 } }
2025-01-17 13:22:27,330{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:27,331{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:27,402{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:27,402{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:27,402{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:27,402{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(68), message: Number(19) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(68), message: Number(19) } }
2025-01-17 13:22:27,402{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(68), message: Number(19) } }, logged:	 Current messages: {Number(6), Number(9), Number(22), Number(10), Number(15), Number(3), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:27,403{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(68), message: Number(19) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:27,403{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(67), message: Number(19) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(67), message: Number(19) } }
2025-01-17 13:22:27,403{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:27,403{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(67), message: Number(19) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(4), Number(20), Number(10), Number(3), Number(2), Number(0), Number(14)}
2025-01-17 13:22:27,404{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(67), message: Number(19) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:27,404{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:27,404{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(62), message: Number(19) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(62), message: Number(19) } }
2025-01-17 13:22:27,404{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(62), message: Number(19) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(22), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:27,404{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(62), message: Number(19) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:27,404{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:27,405{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(42), in_reply_to: 62 } }, logged:	 Executing callback for 62
2025-01-17 13:22:27,405{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(42), in_reply_to: 62 } }
2025-01-17 13:22:27,405{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:27,405{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:27,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:27,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(69), in_reply_to: 67 } }, logged:	 Executing callback for 67
2025-01-17 13:22:27,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(69), in_reply_to: 67 } }
2025-01-17 13:22:27,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, and it is removing n1 from current unacked ["n1", "n5"]
2025-01-17 13:22:27,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, and here is Unacked after removing n1: ["n5"]
2025-01-17 13:22:27,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:27,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(61), in_reply_to: 68 } }, logged:	 Executing callback for 68
2025-01-17 13:22:27,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(61), in_reply_to: 68 } }
2025-01-17 13:22:27,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:27,406{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:27,409{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:27,409{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:27,409{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(63), message: Number(19) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:27,410{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:27,410{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(70), in_reply_to: 63 } }, logged:	 Executing callback for 63
2025-01-17 13:22:27,410{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(70), in_reply_to: 63 } }
2025-01-17 13:22:27,410{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:27,411{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:27,993{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:27,994{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:27,994{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:27,994{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(72), message: Number(20) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(72), message: Number(20) } }
2025-01-17 13:22:27,994{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(72), message: Number(20) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(22), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:27,994{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(72), message: Number(20) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:27,995{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(20) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(20) } }
2025-01-17 13:22:27,995{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(20) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(4), Number(15)}
2025-01-17 13:22:27,995{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(20) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:27,996{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:27,996{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(43), in_reply_to: 72 } }, logged:	 Executing callback for 72
2025-01-17 13:22:27,996{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(43), in_reply_to: 72 } }
2025-01-17 13:22:27,996{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, and it is removing n2 from current unacked ["n4", "n2"]
2025-01-17 13:22:27,996{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, and here is Unacked after removing n2: ["n4"]
2025-01-17 13:22:27,996{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:27,996{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:27,997{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(70), message: Number(20) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(70), message: Number(20) } }
2025-01-17 13:22:27,997{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(70), message: Number(20) } }, logged:	 Current messages: {Number(6), Number(9), Number(22), Number(10), Number(15), Number(3), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:27,997{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(70), message: Number(20) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:27,998{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:27,998{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(69), in_reply_to: 71 } }, logged:	 Executing callback for 71
2025-01-17 13:22:27,998{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:27,998{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(63), in_reply_to: 70 } }, logged:	 Executing callback for 70
2025-01-17 13:22:27,998{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(69), in_reply_to: 71 } }
2025-01-17 13:22:27,998{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:27,999{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:27,998{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(63), in_reply_to: 70 } }
2025-01-17 13:22:27,999{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:27,999{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:28,000{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:28,000{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:28,001{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(65), message: Number(20) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,002{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:28,003{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(64), in_reply_to: 65 } }, logged:	 Executing callback for 65
2025-01-17 13:22:28,003{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(64), in_reply_to: 65 } }
2025-01-17 13:22:28,004{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:28,004{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:28,236{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:28,236{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:28,237{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(7), message: Number(18) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,237{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	18
2025-01-17 13:22:28,237{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	23
2025-01-17 13:22:28,238{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, logged:	 Received broadcast msg Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }
2025-01-17 13:22:28,238{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, logged:	 Current messages: {Number(16), Number(0), Number(8), Number(1), Number(2), Number(18), Number(5), Number(12)}
2025-01-17 13:22:28,238{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(23) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(23) } }
2025-01-17 13:22:28,238{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, logged:	 Update messages: {Number(16), Number(0), Number(8), Number(1), Number(2), Number(18), Number(23), Number(5), Number(12)}
2025-01-17 13:22:28,239{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(23) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(9), Number(22), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:28,239{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:28,239{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:28,239{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:28,239{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:28,239{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(23) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:28,239{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(23) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:28,239{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(23) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:28,239{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(23) } }, logged:	 Initial unacked: ["n5", "n1"]
2025-01-17 13:22:28,240{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(23), message: Number(23) } }, logged:	 Unacked: empty? false, ["n5", "n1"]
2025-01-17 13:22:28,240{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:28,316{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:28,316{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:28,316{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:28,317{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(22) } }
2025-01-17 13:22:28,317{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(4), Number(15)}
2025-01-17 13:22:28,317{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,318{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:28,318{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(71), in_reply_to: 66 } }, logged:	 Executing callback for 66
2025-01-17 13:22:28,318{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(65), message: Number(22) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(65), message: Number(22) } }
2025-01-17 13:22:28,318{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(71), in_reply_to: 66 } }
2025-01-17 13:22:28,318{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, and it is removing n4 from current unacked ["n2", "n4"]
2025-01-17 13:22:28,318{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, and here is Unacked after removing n4: ["n2"]
2025-01-17 13:22:28,319{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(65), message: Number(22) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:28,319{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(65), message: Number(22) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,319{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:28,319{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(44), in_reply_to: 65 } }, logged:	 Executing callback for 65
2025-01-17 13:22:28,320{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(44), in_reply_to: 65 } }
2025-01-17 13:22:28,320{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:28,320{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:28,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:28,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:28,321{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(72), message: Number(22) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(72), message: Number(22) } }
2025-01-17 13:22:28,321{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(72), message: Number(22) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(4), Number(20), Number(10), Number(3), Number(2), Number(0), Number(14)}
2025-01-17 13:22:28,321{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(72), message: Number(22) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,322{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:28,322{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(73), in_reply_to: 72 } }, logged:	 Executing callback for 72
2025-01-17 13:22:28,323{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(73), in_reply_to: 72 } }
2025-01-17 13:22:28,324{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:28,324{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:28,328{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:28,329{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:28,329{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(66), message: Number(22) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,329{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:28,329{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(74), in_reply_to: 66 } }, logged:	 Executing callback for 66
2025-01-17 13:22:28,329{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(74), in_reply_to: 66 } }
2025-01-17 13:22:28,329{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:28,329{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:28,402{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:28,402{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:28,402{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	19
2025-01-17 13:22:28,402{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,403{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-01-17 13:22:28,403{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:28,403{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:28,403{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(64), message: Number(19) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,404{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[2 22 10 9 3 19 13 14 1 7 20 6 0 17 4 15]
2025-01-17 13:22:28,404{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:28,404{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(67), in_reply_to: 64 } }, logged:	 Executing callback for 64
2025-01-17 13:22:28,404{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(67), in_reply_to: 64 } }
2025-01-17 13:22:28,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:28,405{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(10), message: Number(19) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:28,705{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	24
2025-01-17 13:22:28,706{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, logged:	 Received broadcast msg Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }
2025-01-17 13:22:28,706{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(4), Number(15)}
2025-01-17 13:22:28,706{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, logged:	 Update messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(4), Number(15)}
2025-01-17 13:22:28,706{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:28,706{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:28,706{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, logged:	 Initial unacked: ["n1", "n5"]
2025-01-17 13:22:28,706{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:28,707{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:28,707{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:28,706{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }
2025-01-17 13:22:28,707{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }, logged:	 Current messages: {Number(6), Number(9), Number(22), Number(10), Number(15), Number(3), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:28,707{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }, logged:	 Update messages: {Number(6), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:28,707{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:28,708{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:28,708{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:28,708{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:28,707{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }
2025-01-17 13:22:28,708{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(4), Number(20), Number(10), Number(3), Number(2), Number(0), Number(14)}
2025-01-17 13:22:28,708{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Update messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(0), Number(14)}
2025-01-17 13:22:28,708{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:28,708{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:28,708{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:28,709{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:28,709{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(24) } }
2025-01-17 13:22:28,709{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:28,709{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:28,709{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:28,709{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:28,709{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:28,710{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:28,710{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:28,710{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(68), message: Number(24) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(68), message: Number(24) } }
2025-01-17 13:22:28,710{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(68), message: Number(24) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:28,710{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(68), message: Number(24) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:28,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(45), in_reply_to: 68 } }, logged:	 Executing callback for 68
2025-01-17 13:22:28,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(45), in_reply_to: 68 } }
2025-01-17 13:22:28,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:28,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:28,993{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:28,994{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:28,994{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,994{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	20
2025-01-17 13:22:28,995{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:28,996{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[15 6 13 17 9 19 7 1 22 4 20 10 3 2 24 0 14]
2025-01-17 13:22:28,996{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:28,996{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:28,997{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(66), message: Number(20) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:28,997{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:28,997{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(77), in_reply_to: 66 } }, logged:	 Executing callback for 66
2025-01-17 13:22:28,997{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(77), in_reply_to: 66 } }
2025-01-17 13:22:28,997{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:28,997{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(18), message: Number(20) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:29,238{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:29,239{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:29,239{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(24), message: Number(23) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(24), message: Number(23) } }
2025-01-17 13:22:29,239{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(24), message: Number(23) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:29,240{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(24), message: Number(23) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:29,240{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:29,240{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(46), in_reply_to: 24 } }, logged:	 Executing callback for 24
2025-01-17 13:22:29,240{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } } and it received response Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(46), in_reply_to: 24 } }
2025-01-17 13:22:29,240{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:29,240{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:29,316{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:29,316{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:29,316{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:29,317{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	22
2025-01-17 13:22:29,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:29,320{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:29,321{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(60), message: Number(22) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:29,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:29,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(78), in_reply_to: 60 } }, logged:	 Executing callback for 60
2025-01-17 13:22:29,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(78), in_reply_to: 60 } }
2025-01-17 13:22:29,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:29,321{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(11), message: Number(22) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:29,385{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:29,386{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[15 6 13 17 9 19 7 1 22 4 20 10 3 2 24 0 14]
2025-01-17 13:22:29,596{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	25
2025-01-17 13:22:29,596{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, logged:	 Received broadcast msg Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }
2025-01-17 13:22:29,597{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, logged:	 Current messages: {Number(6), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:29,597{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, logged:	 Update messages: {Number(6), Number(25), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:29,597{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:29,598{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(70), message: Number(25) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(70), message: Number(25) } }
2025-01-17 13:22:29,598{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:29,598{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(70), message: Number(25) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:29,599{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }
2025-01-17 13:22:29,599{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(4), Number(15)}
2025-01-17 13:22:29,599{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(70), message: Number(25) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(25), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:29,599{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(70), message: Number(25) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:29,599{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, logged:	 Update messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(25), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(4), Number(15)}
2025-01-17 13:22:29,599{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:29,599{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(70), message: Number(25) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:29,600{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(70), message: Number(25) } }, logged:	 Initial unacked: ["n3", "n1"]
2025-01-17 13:22:29,600{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, logged:	 Initial unacked: ["n1"]
2025-01-17 13:22:29,600{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:29,600{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(70), message: Number(25) } }, logged:	 Unacked: empty? false, ["n3", "n1"]
2025-01-17 13:22:29,600{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:29,600{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:29,600{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, logged:	 Initial unacked: ["n2", "n4"]
2025-01-17 13:22:29,600{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:29,600{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:29,600{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:29,601{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }
2025-01-17 13:22:29,601{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(0), Number(14)}
2025-01-17 13:22:29,601{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 Update messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(25), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(0), Number(14)}
2025-01-17 13:22:29,601{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:29,601{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:29,601{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:29,601{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:29,602{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(79), message: Number(25) } }
2025-01-17 13:22:29,602{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(25), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:29,602{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:29,605{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:29,605{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(47), in_reply_to: 79 } }, logged:	 Executing callback for 79
2025-01-17 13:22:29,605{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(47), in_reply_to: 79 } }
2025-01-17 13:22:29,605{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:29,605{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:29,707{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:29,707{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:29,707{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:29,707{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:29,708{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:29,708{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(76), message: Number(24) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:29,708{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:29,708{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:29,708{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(81), message: Number(24) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(81), message: Number(24) } }
2025-01-17 13:22:29,708{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:29,708{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(72), in_reply_to: 76 } }, logged:	 Executing callback for 76
2025-01-17 13:22:29,708{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(81), message: Number(24) } }, logged:	 Current messages: {Number(6), Number(25), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:29,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(72), in_reply_to: 76 } }
2025-01-17 13:22:29,709{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(81), message: Number(24) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:29,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, and it is removing n5 from current unacked ["n1", "n5"]
2025-01-17 13:22:29,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, and here is Unacked after removing n5: ["n1"]
2025-01-17 13:22:29,712{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(80), message: Number(24) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(80), message: Number(24) } }
2025-01-17 13:22:29,712{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(80), message: Number(24) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(25), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:29,712{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(80), message: Number(24) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:29,713{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(80), message: Number(24) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(80), message: Number(24) } }
2025-01-17 13:22:29,713{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(80), message: Number(24) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(25), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(0), Number(14)}
2025-01-17 13:22:29,715{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(80), message: Number(24) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:29,715{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:29,715{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:29,716{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(48), in_reply_to: 80 } }, logged:	 Executing callback for 80
2025-01-17 13:22:29,716{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(73), in_reply_to: 81 } }, logged:	 Executing callback for 81
2025-01-17 13:22:29,716{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(48), in_reply_to: 80 } }
2025-01-17 13:22:29,717{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(73), in_reply_to: 81 } }
2025-01-17 13:22:29,717{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:29,717{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, and it is removing n5 from current unacked ["n1"]
2025-01-17 13:22:29,718{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:29,718{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, and here is Unacked after removing n5: ["n1"]
2025-01-17 13:22:29,719{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:29,719{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(81), in_reply_to: 80 } }, logged:	 Executing callback for 80
2025-01-17 13:22:29,719{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(81), in_reply_to: 80 } }
2025-01-17 13:22:29,720{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:29,721{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:29,740{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:29,741{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[15 6 13 17 9 19 7 1 22 25 4 20 10 3 2 24 0 14]
2025-01-17 13:22:30,105{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	26
2025-01-17 13:22:30,105{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, logged:	 Received broadcast msg Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }
2025-01-17 13:22:30,106{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(25), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(0), Number(14)}
2025-01-17 13:22:30,106{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, logged:	 Update messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(25), Number(26), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(0), Number(14)}
2025-01-17 13:22:30,106{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,106{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,106{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, logged:	 Initial unacked: ["n4", "n2"]
2025-01-17 13:22:30,106{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:30,106{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:30,106{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:30,107{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }
2025-01-17 13:22:30,107{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(25), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(4), Number(15)}
2025-01-17 13:22:30,107{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, logged:	 Update messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(25), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:30,107{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,108{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, logged:	 Initial unacked: ["n5"]
2025-01-17 13:22:30,108{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:30,108{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:30,111{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }
2025-01-17 13:22:30,111{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }, logged:	 Current messages: {Number(6), Number(25), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14)}
2025-01-17 13:22:30,111{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }, logged:	 Update messages: {Number(6), Number(25), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26)}
2025-01-17 13:22:30,111{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,111{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:30,111{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:30,111{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:30,112{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(84), message: Number(26) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(84), message: Number(26) } }
2025-01-17 13:22:30,112{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(84), message: Number(26) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(25), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:30,114{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(84), message: Number(26) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(26), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(25), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:30,114{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(84), message: Number(26) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,114{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(84), message: Number(26) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,115{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(84), message: Number(26) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:30,115{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:30,115{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(84), message: Number(26) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:30,115{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(49), in_reply_to: 74 } }, logged:	 Executing callback for 74
2025-01-17 13:22:30,115{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:30,115{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(49), in_reply_to: 74 } }
2025-01-17 13:22:30,116{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(74), message: Number(26) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(74), message: Number(26) } }
2025-01-17 13:22:30,116{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:30,116{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(74), message: Number(26) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(26), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(25), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:30,116{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:30,116{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(74), message: Number(26) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:30,239{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:30,239{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:30,240{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(8), message: Number(23) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:30,239{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	23
2025-01-17 13:22:30,371{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	27
2025-01-17 13:22:30,372{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, logged:	 Received broadcast msg Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }
2025-01-17 13:22:30,372{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, logged:	 Current messages: {Number(16), Number(0), Number(8), Number(1), Number(2), Number(18), Number(23), Number(5), Number(12)}
2025-01-17 13:22:30,372{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, logged:	 Update messages: {Number(27), Number(16), Number(0), Number(8), Number(1), Number(2), Number(18), Number(23), Number(5), Number(12)}
2025-01-17 13:22:30,373{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,373{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:30,373{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:30,373{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:30,373{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(26), message: Number(27) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(26), message: Number(27) } }
2025-01-17 13:22:30,373{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(26), message: Number(27) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(26), Number(22), Number(20), Number(24), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(25), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:30,373{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(26), message: Number(27) } }, logged:	 Update messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(26), Number(22), Number(20), Number(24), Number(27), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(25), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:30,373{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(26), message: Number(27) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,373{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(26), message: Number(27) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,373{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(26), message: Number(27) } }, logged:	 Initial unacked: ["n5", "n1"]
2025-01-17 13:22:30,373{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(26), message: Number(27) } }, logged:	 Unacked: empty? false, ["n5", "n1"]
2025-01-17 13:22:30,374{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:30,598{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:30,598{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:30,598{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:30,599{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:30,599{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:30,600{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(76), message: Number(25) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(76), message: Number(25) } }
2025-01-17 13:22:30,599{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(25) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(25) } }
2025-01-17 13:22:30,600{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(25) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(26), Number(22), Number(20), Number(24), Number(27), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(25), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:30,600{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(75), message: Number(25) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:30,600{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(83), message: Number(25) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(83), message: Number(25) } }
2025-01-17 13:22:30,600{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(83), message: Number(25) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(25), Number(26), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(0), Number(14)}
2025-01-17 13:22:30,600{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(83), message: Number(25) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:30,600{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(76), message: Number(25) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(25), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:30,600{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(76), message: Number(25) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:30,602{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:30,602{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:30,602{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:30,602{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:30,602{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(84), in_reply_to: 76 } }, logged:	 Executing callback for 76
2025-01-17 13:22:30,602{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(84), in_reply_to: 76 } }
2025-01-17 13:22:30,602{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, and it is removing n4 from current unacked ["n2", "n4"]
2025-01-17 13:22:30,602{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, and here is Unacked after removing n4: ["n2"]
2025-01-17 13:22:30,602{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(79), message: Number(25) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:30,602{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(85), in_reply_to: 83 } }, logged:	 Executing callback for 83
2025-01-17 13:22:30,603{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(85), in_reply_to: 83 } }
2025-01-17 13:22:30,603{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:30,603{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:30,603{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:30,603{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(86), in_reply_to: 79 } }, logged:	 Executing callback for 79
2025-01-17 13:22:30,603{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(86), in_reply_to: 79 } }
2025-01-17 13:22:30,603{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:30,603{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:30,604{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:30,604{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(50), in_reply_to: 75 } }, logged:	 Executing callback for 75
2025-01-17 13:22:30,604{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(50), in_reply_to: 75 } }
2025-01-17 13:22:30,605{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:30,605{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:30,707{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:30,707{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:30,707{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:30,707{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	24
2025-01-17 13:22:30,708{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:30,708{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:30,708{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(75), message: Number(24) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:30,708{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	28
2025-01-17 13:22:30,708{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:30,708{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(87), in_reply_to: 75 } }, logged:	 Executing callback for 75
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(87), in_reply_to: 75 } }
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(12), message: Number(24) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, logged:	 Received broadcast msg Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(25), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, logged:	 Update messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(28), Number(25), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, logged:	 Initial unacked: ["n1", "n5"]
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:30,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:30,710{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }
2025-01-17 13:22:30,710{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, logged:	 Current messages: {Number(6), Number(25), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26)}
2025-01-17 13:22:30,710{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, logged:	 Update messages: {Number(6), Number(25), Number(28), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26)}
2025-01-17 13:22:30,710{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,710{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(77), message: Number(28) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(77), message: Number(28) } }
2025-01-17 13:22:30,710{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:30,710{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:30,710{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(77), message: Number(28) } }, logged:	 Current messages: {Number(1), Number(8), Number(13), Number(10), Number(6), Number(15), Number(19), Number(4), Number(16), Number(23), Number(9), Number(26), Number(22), Number(20), Number(24), Number(27), Number(12), Number(17), Number(0), Number(18), Number(21), Number(14), Number(25), Number(3), Number(2), Number(7), Number(11), Number(5)}
2025-01-17 13:22:30,711{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(77), message: Number(28) } }, logged:	 Update messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(0), Number(21), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:30,711{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(77), message: Number(28) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,711{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(77), message: Number(28) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,711{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(77), message: Number(28) } }, logged:	 Initial unacked: ["n3", "n1"]
2025-01-17 13:22:30,711{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(77), message: Number(28) } }, logged:	 Unacked: empty? false, ["n3", "n1"]
2025-01-17 13:22:30,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:30,711{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:30,715{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }
2025-01-17 13:22:30,715{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(25), Number(26), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(0), Number(14)}
2025-01-17 13:22:30,716{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }, logged:	 Update messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(25), Number(26), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(28), Number(0), Number(14)}
2025-01-17 13:22:30,716{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:30,716{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:30,716{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:30,716{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:30,718{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(88), message: Number(28) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(88), message: Number(28) } }
2025-01-17 13:22:30,718{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(88), message: Number(28) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(0), Number(21), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:30,718{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(88), message: Number(28) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:30,718{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:30,719{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(51), in_reply_to: 88 } }, logged:	 Executing callback for 88
2025-01-17 13:22:30,719{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(51), in_reply_to: 88 } }
2025-01-17 13:22:30,719{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:30,719{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:31,107{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:31,108{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(89), message: Number(26) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(89), message: Number(26) } }
2025-01-17 13:22:31,108{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(90), message: Number(26) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(90), message: Number(26) } }
2025-01-17 13:22:31,109{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(90), message: Number(26) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(0), Number(21), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:31,109{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(89), message: Number(26) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(28), Number(25), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:31,109{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(90), message: Number(26) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,109{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(89), message: Number(26) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,110{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:31,110{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:31,110{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:31,110{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:31,111{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,111{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(52), in_reply_to: 90 } }, logged:	 Executing callback for 90
2025-01-17 13:22:31,111{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(52), in_reply_to: 90 } }
2025-01-17 13:22:31,111{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, and it is removing n2 from current unacked ["n4", "n2"]
2025-01-17 13:22:31,111{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, and here is Unacked after removing n2: ["n4"]
2025-01-17 13:22:31,111{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,111{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(88), in_reply_to: 89 } }, logged:	 Executing callback for 89
2025-01-17 13:22:31,112{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(88), in_reply_to: 89 } }
2025-01-17 13:22:31,112{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:31,112{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:31,112{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(82), message: Number(26) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,112{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:31,113{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:31,113{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(89), message: Number(26) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(89), message: Number(26) } }
2025-01-17 13:22:31,113{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(89), message: Number(26) } }, logged:	 Current messages: {Number(6), Number(25), Number(28), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26)}
2025-01-17 13:22:31,113{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(89), message: Number(26) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,114{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,114{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(79), in_reply_to: 89 } }, logged:	 Executing callback for 89
2025-01-17 13:22:31,114{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(79), in_reply_to: 89 } }
2025-01-17 13:22:31,114{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:31,115{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:31,115{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,115{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(78), in_reply_to: 82 } }, logged:	 Executing callback for 82
2025-01-17 13:22:31,115{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(78), in_reply_to: 82 } }
2025-01-17 13:22:31,115{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:31,115{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:31,372{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:31,373{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:31,373{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(27), message: Number(27) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(27), message: Number(27) } }
2025-01-17 13:22:31,374{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(27), message: Number(27) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(0), Number(21), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:31,375{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(27), message: Number(27) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,375{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,376{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(53), in_reply_to: 27 } }, logged:	 Executing callback for 27
2025-01-17 13:22:31,376{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } } and it received response Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(53), in_reply_to: 27 } }
2025-01-17 13:22:31,376{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:31,377{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:31,598{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:31,599{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:31,599{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,599{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:31,599{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:31,599{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	25
2025-01-17 13:22:31,600{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(71), message: Number(25) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,601{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,601{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(90), in_reply_to: 71 } }, logged:	 Executing callback for 71
2025-01-17 13:22:31,601{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(90), in_reply_to: 71 } }
2025-01-17 13:22:31,601{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:31,601{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(12), message: Number(25) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:31,602{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	29
2025-01-17 13:22:31,603{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, logged:	 Received broadcast msg Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }
2025-01-17 13:22:31,604{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, logged:	 Current messages: {Number(6), Number(25), Number(28), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26)}
2025-01-17 13:22:31,605{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, logged:	 Update messages: {Number(6), Number(25), Number(28), Number(29), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26)}
2025-01-17 13:22:31,606{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:31,606{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:31,606{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, logged:	 Initial unacked: ["n2", "n4"]
2025-01-17 13:22:31,607{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:31,607{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:31,608{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:31,609{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(81), message: Number(29) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(81), message: Number(29) } }
2025-01-17 13:22:31,610{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(81), message: Number(29) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(0), Number(21), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:31,611{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(81), message: Number(29) } }, logged:	 Update messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(0), Number(21), Number(29), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:31,611{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(81), message: Number(29) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:31,612{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(81), message: Number(29) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:31,612{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }
2025-01-17 13:22:31,612{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(28), Number(25), Number(14), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:31,612{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, logged:	 Update messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(28), Number(25), Number(14), Number(29), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:31,612{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:31,612{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, logged:	 Initial unacked: ["n1"]
2025-01-17 13:22:31,612{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:31,613{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:31,614{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(81), message: Number(29) } }, logged:	 Initial unacked: ["n3", "n1"]
2025-01-17 13:22:31,614{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }
2025-01-17 13:22:31,614{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(25), Number(26), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(28), Number(0), Number(14)}
2025-01-17 13:22:31,615{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 Update messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(29), Number(25), Number(26), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(28), Number(0), Number(14)}
2025-01-17 13:22:31,615{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:31,616{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:31,616{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:31,616{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:31,617{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(81), message: Number(29) } }, logged:	 Unacked: empty? false, ["n3", "n1"]
2025-01-17 13:22:31,618{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n3
2025-01-17 13:22:31,619{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(91), message: Number(29) } }
2025-01-17 13:22:31,619{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(0), Number(21), Number(29), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:31,620{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,620{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,620{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(54), in_reply_to: 91 } }, logged:	 Executing callback for 91
2025-01-17 13:22:31,621{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(54), in_reply_to: 91 } }
2025-01-17 13:22:31,621{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:31,621{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:31,709{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:31,710{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:31,710{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:31,710{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:31,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:31,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(93), message: Number(28) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(93), message: Number(28) } }
2025-01-17 13:22:31,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(93), message: Number(28) } }, logged:	 Current messages: {Number(6), Number(25), Number(28), Number(29), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26)}
2025-01-17 13:22:31,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(93), message: Number(28) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,710{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(92), message: Number(28) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(92), message: Number(28) } }
2025-01-17 13:22:31,712{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(92), message: Number(28) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(29), Number(25), Number(26), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(28), Number(0), Number(14)}
2025-01-17 13:22:31,712{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(83), message: Number(28) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(83), message: Number(28) } }
2025-01-17 13:22:31,712{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(92), message: Number(28) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,712{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(83), message: Number(28) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(0), Number(21), Number(29), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:31,712{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(83), message: Number(28) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,713{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,713{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(92), in_reply_to: 92 } }, logged:	 Executing callback for 92
2025-01-17 13:22:31,713{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(92), in_reply_to: 92 } }
2025-01-17 13:22:31,713{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, and it is removing n1 from current unacked ["n1", "n5"]
2025-01-17 13:22:31,713{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, and here is Unacked after removing n1: ["n5"]
2025-01-17 13:22:31,713{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,713{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(84), in_reply_to: 93 } }, logged:	 Executing callback for 93
2025-01-17 13:22:31,714{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(84), in_reply_to: 93 } }
2025-01-17 13:22:31,714{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:31,714{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:31,714{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,714{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(55), in_reply_to: 83 } }, logged:	 Executing callback for 83
2025-01-17 13:22:31,714{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(55), in_reply_to: 83 } }
2025-01-17 13:22:31,714{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:31,715{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:31,717{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:31,717{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:31,717{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(86), message: Number(28) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:31,717{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:31,718{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(93), in_reply_to: 86 } }, logged:	 Executing callback for 86
2025-01-17 13:22:31,718{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(93), in_reply_to: 86 } }
2025-01-17 13:22:31,718{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:31,719{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:32,107{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:32,107{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:32,107{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:32,107{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	26
2025-01-17 13:22:32,108{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:32,109{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[15 6 13 17 9 19 7 1 22 29 25 26 4 20 10 3 2 24 28 0 14]
2025-01-17 13:22:32,109{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:info	:broadcast	21	:net-timeout
2025-01-17 13:22:32,109{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:32,110{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:32,110{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:32,110{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(83), message: Number(26) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:32,110{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(94), in_reply_to: 83 } }, logged:	 Executing callback for 83
2025-01-17 13:22:32,110{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(94), in_reply_to: 83 } }
2025-01-17 13:22:32,110{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:32,110{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(22), message: Number(26) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:32,210{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:32,211{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[15 6 13 17 9 19 7 1 22 29 25 26 4 20 10 3 2 24 28 0 14]
2025-01-17 13:22:32,372{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:32,373{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:32,373{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(9), message: Number(27) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:32,374{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	27
2025-01-17 13:22:32,529{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:32,530{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[15 6 13 17 9 19 7 1 22 29 25 26 4 20 10 3 2 24 28 0 14]
2025-01-17 13:22:32,609{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, logged:	 Unacked: empty? false, ["n2", "n4"]
2025-01-17 13:22:32,609{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:32,609{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:32,610{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(85), message: Number(29) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(85), message: Number(29) } }
2025-01-17 13:22:32,611{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(85), message: Number(29) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(0), Number(21), Number(29), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:32,611{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(85), message: Number(29) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:32,612{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:32,612{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(56), in_reply_to: 85 } }, logged:	 Executing callback for 85
2025-01-17 13:22:32,612{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(56), in_reply_to: 85 } }
2025-01-17 13:22:32,612{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, and it is removing n2 from current unacked ["n2", "n4"]
2025-01-17 13:22:32,612{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, and here is Unacked after removing n2: ["n4"]
2025-01-17 13:22:32,613{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(86), message: Number(29) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(86), message: Number(29) } }
2025-01-17 13:22:32,613{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, logged:	 Unacked: empty? false, ["n1"]
2025-01-17 13:22:32,613{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:32,613{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(86), message: Number(29) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(28), Number(25), Number(14), Number(29), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:32,614{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(86), message: Number(29) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:32,614{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(95), message: Number(29) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(95), message: Number(29) } }
2025-01-17 13:22:32,614{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(95), message: Number(29) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(29), Number(25), Number(26), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(28), Number(0), Number(14)}
2025-01-17 13:22:32,614{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(95), message: Number(29) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:32,614{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:32,615{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(98), in_reply_to: 95 } }, logged:	 Executing callback for 95
2025-01-17 13:22:32,615{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(98), in_reply_to: 95 } }
2025-01-17 13:22:32,615{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, and it is removing n1 from current unacked ["n1"]
2025-01-17 13:22:32,615{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:32,616{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:32,616{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(96), in_reply_to: 86 } }, logged:	 Executing callback for 86
2025-01-17 13:22:32,616{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(96), in_reply_to: 86 } }
2025-01-17 13:22:32,616{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:32,616{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:32,616{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:32,616{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:32,617{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(91), message: Number(29) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:32,618{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:32,618{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(99), in_reply_to: 91 } }, logged:	 Executing callback for 91
2025-01-17 13:22:32,618{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(99), in_reply_to: 91 } }
2025-01-17 13:22:32,618{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:32,618{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:32,710{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:32,710{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	28
2025-01-17 13:22:32,710{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:32,710{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:32,710{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:32,710{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:32,711{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(87), message: Number(28) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:32,711{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:32,711{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(87), in_reply_to: 87 } }, logged:	 Executing callback for 87
2025-01-17 13:22:32,711{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(87), in_reply_to: 87 } }
2025-01-17 13:22:32,711{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:32,711{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(13), message: Number(28) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:32,795{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	30
2025-01-17 13:22:32,796{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }
2025-01-17 13:22:32,797{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, logged:	 Current messages: {Number(2), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(28), Number(25), Number(14), Number(29), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:32,797{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, logged:	 Received broadcast msg Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }
2025-01-17 13:22:32,797{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(29), Number(25), Number(26), Number(4), Number(20), Number(10), Number(3), Number(2), Number(24), Number(28), Number(0), Number(14)}
2025-01-17 13:22:32,798{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, logged:	 Update messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(29), Number(25), Number(26), Number(4), Number(20), Number(10), Number(30), Number(3), Number(2), Number(24), Number(28), Number(0), Number(14)}
2025-01-17 13:22:32,798{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, logged:	 filtering n4 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:32,798{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:32,798{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, logged:	 Initial unacked: ["n4", "n2"]
2025-01-17 13:22:32,798{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:32,798{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:32,798{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:32,798{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(101), message: Number(30) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(101), message: Number(30) } }
2025-01-17 13:22:32,799{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(101), message: Number(30) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(0), Number(21), Number(29), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:32,799{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(101), message: Number(30) } }, logged:	 Update messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:32,799{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(101), message: Number(30) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:32,799{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(101), message: Number(30) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:32,799{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(101), message: Number(30) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:32,799{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(101), message: Number(30) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:32,800{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:32,800{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, logged:	 Update messages: {Number(2), Number(30), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(28), Number(25), Number(14), Number(29), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:32,800{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:32,800{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, logged:	 Initial unacked: ["n5"]
2025-01-17 13:22:32,800{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:32,801{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:32,801{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }
2025-01-17 13:22:32,802{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(88), message: Number(30) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(88), message: Number(30) } }
2025-01-17 13:22:32,802{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }, logged:	 Current messages: {Number(6), Number(25), Number(28), Number(29), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26)}
2025-01-17 13:22:32,802{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }, logged:	 Update messages: {Number(6), Number(25), Number(28), Number(29), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26), Number(30)}
2025-01-17 13:22:32,802{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:32,802{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:32,802{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:32,803{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:32,802{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(88), message: Number(30) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:32,803{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(88), message: Number(30) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:32,803{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:32,803{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(57), in_reply_to: 88 } }, logged:	 Executing callback for 88
2025-01-17 13:22:32,803{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(57), in_reply_to: 88 } }
2025-01-17 13:22:32,804{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:32,804{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:32,978{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:invoke	:broadcast	31
2025-01-17 13:22:32,979{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c17", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(31) } }, logged:	 Received broadcast msg Message { src: "c17", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(31) } }
2025-01-17 13:22:32,979{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c17", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(31) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:32,979{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c17", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(31) } }, logged:	 Update messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(31), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:32,979{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c17", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(31) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:32,979{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c17", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(31) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:32,979{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c17", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(31) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:32,979{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c17", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(31) } }, logged:	 Initial unacked: ["n5", "n3", "n1"]
2025-01-17 13:22:32,979{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c17", dest: "n2", body: Broadcast { msg_id: Some(1), message: Number(31) } }, logged:	 Unacked: empty? false, ["n5", "n3", "n1"]
2025-01-17 13:22:32,979{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:33,027{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-01-17 13:22:33,029{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[27 16 0 8 1 2 18 23 5 12]
2025-01-17 13:22:33,361{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-01-17 13:22:33,362{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[27 16 0 8 1 2 18 23 5 12]
2025-01-17 13:22:33,388{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	32
2025-01-17 13:22:33,388{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, logged:	 Received broadcast msg Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }
2025-01-17 13:22:33,388{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, logged:	 Current messages: {Number(27), Number(16), Number(0), Number(8), Number(1), Number(2), Number(18), Number(23), Number(5), Number(12)}
2025-01-17 13:22:33,389{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, logged:	 Update messages: {Number(27), Number(32), Number(16), Number(0), Number(8), Number(1), Number(2), Number(18), Number(23), Number(5), Number(12)}
2025-01-17 13:22:33,389{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:33,390{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:33,390{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:33,390{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:33,390{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(31), message: Number(32) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(31), message: Number(32) } }
2025-01-17 13:22:33,391{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(31), message: Number(32) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(31), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:33,391{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(31), message: Number(32) } }, logged:	 Update messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(31), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(32), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:33,391{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(31), message: Number(32) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:33,391{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(31), message: Number(32) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:33,391{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(31), message: Number(32) } }, logged:	 Initial unacked: ["n5", "n1"]
2025-01-17 13:22:33,391{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(31), message: Number(32) } }, logged:	 Unacked: empty? false, ["n5", "n1"]
2025-01-17 13:22:33,391{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:33,609{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:33,609{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:33,610{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:33,610{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	29
2025-01-17 13:22:33,613{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:33,613{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:33,613{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: Broadcast { msg_id: Some(82), message: Number(29) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:33,614{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:33,614{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(99), in_reply_to: 82 } }, logged:	 Executing callback for 82
2025-01-17 13:22:33,614{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } } and it received response Message { src: "n4", dest: "n5", body: BroadcastOk { msg_id: Some(99), in_reply_to: 82 } }
2025-01-17 13:22:33,614{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:33,614{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c14", dest: "n5", body: Broadcast { msg_id: Some(13), message: Number(29) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:33,669{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	33
2025-01-17 13:22:33,670{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, logged:	 Received broadcast msg Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }
2025-01-17 13:22:33,670{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, logged:	 Current messages: {Number(2), Number(30), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(28), Number(25), Number(14), Number(29), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:33,671{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, logged:	 Update messages: {Number(2), Number(30), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(28), Number(25), Number(14), Number(29), Number(33), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:33,671{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, logged:	 filtering n1 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:33,672{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:33,672{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, logged:	 Initial unacked: ["n1", "n5"]
2025-01-17 13:22:33,672{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:33,673{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:33,673{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:33,676{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }
2025-01-17 13:22:33,677{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }, logged:	 Current messages: {Number(6), Number(25), Number(28), Number(29), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26), Number(30)}
2025-01-17 13:22:33,677{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }, logged:	 Update messages: {Number(33), Number(6), Number(25), Number(28), Number(29), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26), Number(30)}
2025-01-17 13:22:33,677{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:33,677{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:33,677{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:33,677{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:33,679{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }
2025-01-17 13:22:33,679{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(29), Number(25), Number(26), Number(4), Number(20), Number(10), Number(30), Number(3), Number(2), Number(24), Number(28), Number(0), Number(14)}
2025-01-17 13:22:33,679{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, logged:	 Update messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(29), Number(25), Number(26), Number(33), Number(4), Number(20), Number(10), Number(30), Number(3), Number(2), Number(24), Number(28), Number(0), Number(14)}
2025-01-17 13:22:33,679{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, logged:	 filtering n2 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:33,679{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, logged:	 Initial unacked: ["n2"]
2025-01-17 13:22:33,679{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:33,680{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:33,683{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(102), message: Number(33) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(102), message: Number(33) } }
2025-01-17 13:22:33,683{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(102), message: Number(33) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(31), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(32), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:33,683{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(102), message: Number(33) } }, logged:	 Update messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(31), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(33), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(32), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:33,683{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(102), message: Number(33) } }, logged:	 filtering n5 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:33,683{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(102), message: Number(33) } }, logged:	 filtering n3 out of unacked Mutex { data: <locked>, poisoned: false, .. }
2025-01-17 13:22:33,683{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(102), message: Number(33) } }, logged:	 Initial unacked: ["n5", "n3"]
2025-01-17 13:22:33,683{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(102), message: Number(33) } }, logged:	 Unacked: empty? false, ["n5", "n3"]
2025-01-17 13:22:33,683{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:33,688{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(90), message: Number(33) } }, logged:	 Received broadcast msg Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(90), message: Number(33) } }
2025-01-17 13:22:33,688{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(90), message: Number(33) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(31), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(33), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(32), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:33,688{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n2", body: Broadcast { msg_id: Some(90), message: Number(33) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:33,688{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:33,688{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(58), in_reply_to: 90 } }, logged:	 Executing callback for 90
2025-01-17 13:22:33,688{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } } and it received response Message { src: "n2", dest: "n5", body: BroadcastOk { msg_id: Some(58), in_reply_to: 90 } }
2025-01-17 13:22:33,688{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:33,689{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:33,797{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, logged:	 Unacked: empty? false, ["n4", "n2"]
2025-01-17 13:22:33,797{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n4
2025-01-17 13:22:33,797{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:33,798{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(104), message: Number(30) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(104), message: Number(30) } }
2025-01-17 13:22:33,798{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(104), message: Number(30) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(31), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(33), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(32), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:33,798{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(104), message: Number(30) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:33,798{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(103), message: Number(30) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(103), message: Number(30) } }
2025-01-17 13:22:33,799{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(103), message: Number(30) } }, logged:	 Current messages: {Number(2), Number(30), Number(22), Number(10), Number(9), Number(3), Number(19), Number(13), Number(24), Number(28), Number(25), Number(14), Number(29), Number(33), Number(1), Number(7), Number(20), Number(6), Number(0), Number(17), Number(26), Number(4), Number(15)}
2025-01-17 13:22:33,799{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:33,799{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(103), message: Number(30) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:33,800{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(59), in_reply_to: 104 } }, logged:	 Executing callback for 104
2025-01-17 13:22:33,800{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(59), in_reply_to: 104 } }
2025-01-17 13:22:33,800{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, logged:	 Unacked: empty? false, ["n5"]
2025-01-17 13:22:33,800{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, and it is removing n2 from current unacked ["n4", "n2"]
2025-01-17 13:22:33,801{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(102), message: Number(30) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(102), message: Number(30) } }
2025-01-17 13:22:33,801{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:33,801{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, and here is Unacked after removing n2: ["n4"]
2025-01-17 13:22:33,801{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:33,801{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(102), in_reply_to: 103 } }, logged:	 Executing callback for 103
2025-01-17 13:22:33,801{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(102), in_reply_to: 103 } }
2025-01-17 13:22:33,801{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, and it is removing n4 from current unacked ["n4"]
2025-01-17 13:22:33,802{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:33,802{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(102), message: Number(30) } }, logged:	 Current messages: {Number(33), Number(6), Number(25), Number(28), Number(29), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26), Number(30)}
2025-01-17 13:22:33,802{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(102), message: Number(30) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:33,802{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:33,802{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:33,802{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(98), message: Number(30) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:33,803{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:33,803{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(91), in_reply_to: 102 } }, logged:	 Executing callback for 102
2025-01-17 13:22:33,803{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(91), in_reply_to: 102 } }
2025-01-17 13:22:33,803{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:33,804{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:33,804{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:33,804{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(92), in_reply_to: 98 } }, logged:	 Executing callback for 98
2025-01-17 13:22:33,804{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(92), in_reply_to: 98 } }
2025-01-17 13:22:33,804{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:33,805{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:33,908{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-01-17 13:22:33,909{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[33 6 25 28 29 9 22 10 15 3 24 19 17 20 7 0 2 13 1 4 14 26 30]
2025-01-17 13:22:34,249{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-01-17 13:22:34,250{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[33 6 25 28 29 9 22 10 15 3 24 19 17 20 7 0 2 13 1 4 14 26 30]
2025-01-17 13:22:34,391{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:34,391{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:34,392{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(32), message: Number(32) } }, logged:	 Received broadcast msg Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(32), message: Number(32) } }
2025-01-17 13:22:34,392{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(32), message: Number(32) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(31), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(33), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(32), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:34,393{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n3", dest: "n2", body: Broadcast { msg_id: Some(32), message: Number(32) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:34,393{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:34,393{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(60), in_reply_to: 32 } }, logged:	 Executing callback for 32
2025-01-17 13:22:34,393{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } } and it received response Message { src: "n2", dest: "n3", body: BroadcastOk { msg_id: Some(60), in_reply_to: 32 } }
2025-01-17 13:22:34,393{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:34,393{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:34,674{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, logged:	 Unacked: empty? false, ["n1", "n5"]
2025-01-17 13:22:34,674{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n1
2025-01-17 13:22:34,674{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n5
2025-01-17 13:22:34,675{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(104), message: Number(33) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(104), message: Number(33) } }
2025-01-17 13:22:34,675{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(104), message: Number(33) } }, logged:	 Current messages: {Number(15), Number(6), Number(13), Number(17), Number(9), Number(19), Number(7), Number(1), Number(22), Number(29), Number(25), Number(26), Number(33), Number(4), Number(20), Number(10), Number(30), Number(3), Number(2), Number(24), Number(28), Number(0), Number(14)}
2025-01-17 13:22:34,675{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(104), message: Number(33) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:34,675{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(105), message: Number(33) } }, logged:	 Received broadcast msg Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(105), message: Number(33) } }
2025-01-17 13:22:34,676{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(105), message: Number(33) } }, logged:	 Current messages: {Number(33), Number(6), Number(25), Number(28), Number(29), Number(9), Number(22), Number(10), Number(15), Number(3), Number(24), Number(19), Number(17), Number(20), Number(7), Number(0), Number(2), Number(13), Number(1), Number(4), Number(14), Number(26), Number(30)}
2025-01-17 13:22:34,676{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(105), message: Number(33) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:34,676{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:34,676{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(105), in_reply_to: 104 } }, logged:	 Executing callback for 104
2025-01-17 13:22:34,676{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(105), in_reply_to: 104 } }
2025-01-17 13:22:34,677{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, and it is removing n1 from current unacked ["n1", "n5"]
2025-01-17 13:22:34,677{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, and here is Unacked after removing n1: ["n5"]
2025-01-17 13:22:34,677{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:34,677{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(95), in_reply_to: 105 } }, logged:	 Executing callback for 105
2025-01-17 13:22:34,677{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(95), in_reply_to: 105 } }
2025-01-17 13:22:34,678{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, and it is removing n5 from current unacked ["n5"]
2025-01-17 13:22:34,678{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:34,678{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:34,678{GMT}	INFO	[n5 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n5", body: Broadcast { msg_id: Some(101), message: Number(33) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:34,678{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, logged:	 Unacked: empty? false, ["n2"]
2025-01-17 13:22:34,678{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Sending RPC call to n2
2025-01-17 13:22:34,679{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:34,679{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(106), message: Number(33) } }, logged:	 Received broadcast msg Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(106), message: Number(33) } }
2025-01-17 13:22:34,679{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(106), message: Number(33) } }, logged:	 Current messages: {Number(1), Number(13), Number(15), Number(19), Number(16), Number(23), Number(26), Number(9), Number(22), Number(20), Number(24), Number(31), Number(12), Number(17), Number(18), Number(14), Number(3), Number(2), Number(5), Number(28), Number(8), Number(33), Number(10), Number(27), Number(4), Number(30), Number(0), Number(21), Number(29), Number(32), Number(25), Number(7), Number(11), Number(6)}
2025-01-17 13:22:34,679{GMT}	INFO	[n2 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n2", body: Broadcast { msg_id: Some(106), message: Number(33) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:34,680{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:34,681{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(96), in_reply_to: 101 } }, logged:	 Executing callback for 101
2025-01-17 13:22:34,681{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:34,681{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(61), in_reply_to: 106 } }, logged:	 Executing callback for 106
2025-01-17 13:22:34,681{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } } and it received response Message { src: "n2", dest: "n1", body: BroadcastOk { msg_id: Some(61), in_reply_to: 106 } }
2025-01-17 13:22:34,681{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } } and it received response Message { src: "n5", dest: "n4", body: BroadcastOk { msg_id: Some(96), in_reply_to: 101 } }
2025-01-17 13:22:34,681{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, and it is removing n5 from current unacked []
2025-01-17 13:22:34,681{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, and it is removing n2 from current unacked ["n2"]
2025-01-17 13:22:34,682{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, and here is Unacked after removing n2: []
2025-01-17 13:22:34,682{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, and here is Unacked after removing n5: []
2025-01-17 13:22:34,797{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:34,797{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:34,797{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:34,797{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	30
2025-01-17 13:22:34,800{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:34,800{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:34,800{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: Broadcast { msg_id: Some(100), message: Number(30) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:34,801{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:34,801{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(106), in_reply_to: 100 } }, logged:	 Executing callback for 100
2025-01-17 13:22:34,801{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } } and it received response Message { src: "n4", dest: "n1", body: BroadcastOk { msg_id: Some(106), in_reply_to: 100 } }
2025-01-17 13:22:34,801{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, and it is removing n4 from current unacked []
2025-01-17 13:22:34,801{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c10", dest: "n1", body: Broadcast { msg_id: Some(26), message: Number(30) } }, and here is Unacked after removing n4: []
2025-01-17 13:22:35,391{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:35,391{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:35,391{GMT}	INFO	[n3 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c12", dest: "n3", body: Broadcast { msg_id: Some(12), message: Number(32) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:35,391{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	32
2025-01-17 13:22:35,674{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:35,674{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:35,674{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:35,675{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	33
2025-01-17 13:22:35,678{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, logged:	 Unacked: empty? true, []
2025-01-17 13:22:35,678{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa {log_prefix} Unacked is empty, stop looping
2025-01-17 13:22:35,678{GMT}	INFO	[n1 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n4", dest: "n1", body: Broadcast { msg_id: Some(100), message: Number(33) } }, logged:	 Sending BroadcastOk to client
2025-01-17 13:22:35,679{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa Received BroadcastOk
2025-01-17 13:22:35,679{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WHILE PROCESSING: Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(108), in_reply_to: 100 } }, logged:	 Executing callback for 100
2025-01-17 13:22:35,679{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } } and it received response Message { src: "n1", dest: "n4", body: BroadcastOk { msg_id: Some(108), in_reply_to: 100 } }
2025-01-17 13:22:35,679{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, and it is removing n1 from current unacked []
2025-01-17 13:22:35,679{GMT}	INFO	[n4 stderr] maelstrom.process: aaaaaaaaaaaaaa WITHIN RPC: this RPC was spawned by Message { src: "c13", dest: "n4", body: Broadcast { msg_id: Some(14), message: Number(33) } }, and here is Unacked after removing n1: []
2025-01-17 13:22:37,978{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:info	:broadcast	31	:net-timeout
2025-01-17 13:22:37,978{GMT}	INFO	[jepsen worker 0] jepsen.generator.interpreter: Waiting for recovery...
2025-01-17 13:22:47,980{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-01-17 13:22:47,980{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-01-17 13:22:47,980{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:invoke	:read	nil
2025-01-17 13:22:47,982{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[2 30 22 10 9 3 19 13 24 28 25 14 29 33 1 7 20 6 0 17 26 4 15]
2025-01-17 13:22:47,983{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-01-17 13:22:47,983{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-01-17 13:22:47,984{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[27 32 16 0 8 1 2 18 23 5 12]
2025-01-17 13:22:47,984{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[33 6 25 28 29 9 22 10 15 3 24 19 17 20 7 0 2 13 1 4 14 26 30]
2025-01-17 13:22:47,985{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:ok	:read	[1 13 15 19 16 23 26 9 22 20 24 31 12 17 18 14 3 2 5 28 8 33 10 27 4 30 0 21 29 32 25 7 11 6]
2025-01-17 13:22:47,985{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[15 6 13 17 9 19 7 1 22 29 25 26 33 4 20 10 30 3 2 24 28 0 14]
2025-01-17 13:22:48,001{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2025-01-17 13:22:48,104{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2025-01-17 13:22:48,123{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2025-01-17 13:22:48,124{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2025-01-17 13:22:48,142{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2025-01-17 13:22:48,153{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2025-01-17 13:22:49,221{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2025-01-17 13:22:49,222{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2025-01-17 13:22:49,853{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2025-01-17 13:22:49,899{GMT}	INFO	[jepsen results] jepsen.store: Wrote /workspaces/maelstrom-tutorial/store/broadcast/20250117T132211.859Z/results.edn
2025-01-17 13:22:49,948{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 77,
         :ok-count 73,
         :fail-count 0,
         :info-count 4,
         :by-f {:broadcast {:valid? true,
                            :count 34,
                            :ok-count 30,
                            :fail-count 0,
                            :info-count 4},
                :read {:valid? true,
                       :count 43,
                       :ok-count 43,
                       :fail-count 0,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 0.9480519},
 :net {:all {:send-count 502,
             :recv-count 502,
             :msg-count 502,
             :msgs-per-op 6.5194807},
       :clients {:send-count 170, :recv-count 170, :msg-count 170},
       :servers {:send-count 332,
                 :recv-count 332,
                 :msg-count 332,
                 :msgs-per-op 4.3116884},
       :valid? true},
 :workload {:worst-stale ({:element 3,
                           :outcome :stable,
                           :stable-latency 32404,
                           :lost-latency nil,
                           :known #jepsen.history.Op{:index 9,
                                                     :time 1314813953,
                                                     :type :ok,
                                                     :process 3,
                                                     :f :read,
                                                     :value [2 3 1 0]},
                           :last-absent #jepsen.history.Op{:index 146,
                                                           :time 33719023226,
                                                           :type :invoke,
                                                           :process 2,
                                                           :f :read,
                                                           :value nil,
                                                           :final? true}}
                          {:element 4,
                           :outcome :stable,
                           :stable-latency 30048,
                           :lost-latency nil,
                           :known #jepsen.history.Op{:index 17,
                                                     :time 3670885752,
                                                     :type :ok,
                                                     :process 3,
                                                     :f :add,
                                                     :value 4},
                           :last-absent #jepsen.history.Op{:index 146,
                                                           :time 33719023226,
                                                           :type :invoke,
                                                           :process 2,
                                                           :f :read,
                                                           :value nil,
                                                           :final? true}}
                          {:element 7,
                           :outcome :stable,
                           :stable-latency 30046,
                           :lost-latency nil,
                           :known #jepsen.history.Op{:index 19,
                                                     :time 3672528946,
                                                     :type :ok,
                                                     :process 3,
                                                     :f :read,
                                                     :value [2
                                                             3
                                                             6
                                                             1
                                                             0
                                                             7
                                                             4]},
                           :last-absent #jepsen.history.Op{:index 146,
                                                           :time 33719023226,
                                                           :type :invoke,
                                                           :process 2,
                                                           :f :read,
                                                           :value nil,
                                                           :final? true}}
                          {:element 6,
                           :outcome :stable,
                           :stable-latency 30046,
                           :lost-latency nil,
                           :known #jepsen.history.Op{:index 19,
                                                     :time 3672528946,
                                                     :type :ok,
                                                     :process 3,
                                                     :f :read,
                                                     :value [2
                                                             3
                                                             6
                                                             1
                                                             0
                                                             7
                                                             4]},
                           :last-absent #jepsen.history.Op{:index 146,
                                                           :time 33719023226,
                                                           :type :invoke,
                                                           :process 2,
                                                           :f :read,
                                                           :value nil,
                                                           :final? true}}
                          {:element 9,
                           :outcome :stable,
                           :stable-latency 28633,
                           :lost-latency nil,
                           :known #jepsen.history.Op{:index 27,
                                                     :time 5085168786,
                                                     :type :ok,
                                                     :process 4,
                                                     :f :read,
                                                     :value [6
                                                             9
                                                             7
                                                             0
                                                             2
                                                             1
                                                             3
                                                             4]},
                           :last-absent #jepsen.history.Op{:index 146,
                                                           :time 33719023226,
                                                           :type :invoke,
                                                           :process 2,
                                                           :f :read,
                                                           :value nil,
                                                           :final? true}}
                          {:element 10,
                           :outcome :stable,
                           :stable-latency 26875,
                           :lost-latency nil,
                           :known #jepsen.history.Op{:index 45,
                                                     :time 6843587115,
                                                     :type :ok,
                                                     :process 0,
                                                     :f :read,
                                                     :value [6
                                                             9
                                                             10
                                                             7
                                                             1
                                                             3
                                                             2
                                                             4
                                                             0]},
                           :last-absent #jepsen.history.Op{:index 146,
                                                           :time 33719023226,
                                                           :type :invoke,
                                                           :process 2,
                                                           :f :read,
                                                           :value nil,
                                                           :final? true}}
                          {:element 13,
                           :outcome :stable,
                           :stable-latency 25349,
                           :lost-latency nil,
                           :known #jepsen.history.Op{:index 63,
                                                     :time 8369266519,
                                                     :type :ok,
                                                     :process 0,
                                                     :f :read,
                                                     :value [6
                                                             13
                                                             9
                                                             10
                                                             7
                                                             1
                                                             3
                                                             2
                                                             4
                                                             0]},
                           :last-absent #jepsen.history.Op{:index 146,
                                                           :time 33719023226,
                                                           :type :invoke,
                                                           :process 2,
                                                           :f :read,
                                                           :value nil,
                                                           :final? true}}
                          {:element 14,
                           :outcome :stable,
                           :stable-latency 24668,
                           :lost-latency nil,
                           :known #jepsen.history.Op{:index 69,
                                                     :time 9050962206,
                                                     :type :ok,
                                                     :process 4,
                                                     :f :read,
                                                     :value [6
                                                             9
                                                             7
                                                             0
                                                             2
                                                             10
                                                             1
                                                             3
                                                             4
                                                             13
                                                             14]},
                           :last-absent #jepsen.history.Op{:index 146,
                                                           :time 33719023226,
                                                           :type :invoke,
                                                           :process 2,
                                                           :f :read,
                                                           :value nil,
                                                           :final? true}}),
            :duplicated-count 0,
            :valid? false,
            :lost-count 8,
            :lost (5 8 12 16 18 23 27 32),
            :stable-count 23,
            :stale-count 20,
            :stale (3
                    4
                    6
                    7
                    9
                    10
                    13
                    14
                    15
                    17
                    19
                    20
                    22
                    24
                    25
                    26
                    28
                    29
                    30
                    33),
            :never-read-count 3,
            :stable-latencies {0 0,
                               0.5 19576,
                               0.95 30048,
                               0.99 32404,
                               1 32404},
            :attempt-count 34,
            :lost-latencies {0 12588,
                             0.5 22188,
                             0.95 29307,
                             0.99 29307,
                             1 29307},
            :never-read (11 21 31),
            :duplicated {}},
 :valid? false}


Analysis invalid! (ﾉಥ益ಥ）ﾉ ┻━┻